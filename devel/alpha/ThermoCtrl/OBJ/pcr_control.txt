; generated by ARM C/C++ Compiler with , RVCT4.0 [Build 524] for uVision
; commandline ArmCC [--debug -c --asm --interleave -o..\OBJ\pcr_control.o --depend=..\OBJ\pcr_control.d --device=DARMSTM --apcs=interwork -O0 -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\USMART -I..\HARDWARE\LED -I..\HARDWARE\BEEP -I..\HARDWARE\KEY -I..\HARDWARE\EXTI -I..\HARDWARE\WDG -I..\HARDWARE\TIMER -I..\HARDWARE\TPAD -I..\HARDWARE\OLED -I..\HARDWARE\LCD -I..\HARDWARE\RTC -I..\HARDWARE\WKUP -I..\HARDWARE\ADC -I..\HARDWARE\DAC -I..\HARDWARE\DMA -I..\HARDWARE\24CXX -I..\HARDWARE\SPI -I..\HARDWARE\FLASH -I..\USER -I..\USB\LIB -I..\USB\CONFIG -IC:\Keil\ARM\INC\ST\STM32F10x --omf_browse=..\OBJ\pcr_control.crf PCR_Control.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  Send_Command PROC
;;;30     															   
;;;31     u8 Send_Command(u8 cmd, u8 row_num, u8 length, u8 * pbuf)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;32     {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
00000a  461f              MOV      r7,r3
;;;33     	u8 i;
;;;34     
;;;35     	if(length>MAX_LENGTH_VALID)
00000c  2e10              CMP      r6,#0x10
00000e  dd02              BLE      |L1.22|
;;;36     		return ERR_LENGTH;
000010  2001              MOVS     r0,#1
                  |L1.18|
;;;37     /*
;;;38     	if(row_num>MAX_ROW_NUM)
;;;39     		return ERR_CMD;
;;;40     */
;;;41      	switch(cmd)
;;;42     	{
;;;43     		case PXL_DRIVE:
;;;44     				if(row_num < PIX_TOTAL_ROW)
;;;45     				{
;;;46     			  		SPI_2_SendBuf[0]= (PXL_DRIVE<<5)| row_num;
;;;47     					for(i=0;i<length;i++)
;;;48     						SPI_2_SendBuf[1+i]= *(pbuf+i);	
;;;49     					SPI_2_Trans(length+1);
;;;50     				}else
;;;51     					return ERR_ROW;
;;;52     					
;;;53     			break;	
;;;54     			
;;;55     		case REG_WRITE:
;;;56     				if(row_num <= REG_MAX_NUM)
;;;57     				{
;;;58     			  		SPI_2_SendBuf[0]= (REG_WRITE<<5)| row_num;
;;;59     					for(i=0;i<length;i++)
;;;60     						SPI_2_SendBuf[1+i]= *(pbuf+i);	
;;;61     					SPI_2_Trans(length+1);
;;;62     				}else
;;;63     					return ERR_ROW;
;;;64     			break;	
;;;65     
;;;66     		case ADC_START:
;;;67     					//OSC_Ctrl=OSC_ON;
;;;68     					//OSC_Status=1;
;;;69     					//OSC_Busy=1;
;;;70     
;;;71     			  		SPI_2_SendBuf[0]= (ADC_START<<5);	
;;;72     					SPI_2_Trans(1);
;;;73     					
;;;74     			break;
;;;75     		
;;;76     		case PCR_ADC_READ:
;;;77     			 		SPI_2_SendBuf[0]= 0xff;	  /*set to a invalid command, in case of misfunction*/
;;;78     					SPI_2_Trans((PIX_TOTAL_COL<<1));
;;;79     					SPI_Rev_Data_Copy((PIX_TOTAL_COL<<1));
;;;80     			break;
;;;81     									   
;;;82     		default:
;;;83     				return ERR_CMD;
;;;84     			break;
;;;85     	}
;;;86     	return 	NO_ERR;
;;;87     }
000012  e8bd81f0          POP      {r4-r8,pc}
                  |L1.22|
000016  2c02              CMP      r4,#2                 ;41
000018  d021              BEQ      |L1.94|
00001a  2c03              CMP      r4,#3                 ;41
00001c  d004              BEQ      |L1.40|
00001e  2c04              CMP      r4,#4                 ;41
000020  d038              BEQ      |L1.148|
000022  2c05              CMP      r4,#5                 ;41
000024  d147              BNE      |L1.182|
000026  e03c              B        |L1.162|
                  |L1.40|
000028  2d0c              CMP      r5,#0xc               ;44
00002a  da15              BGE      |L1.88|
00002c  f0450060          ORR      r0,r5,#0x60           ;46
000030  49fc              LDR      r1,|L1.1060|
000032  7008              STRB     r0,[r1,#0]            ;46
000034  f04f0800          MOV      r8,#0                 ;47
000038  e007              B        |L1.74|
                  |L1.58|
00003a  f8171008          LDRB     r1,[r7,r8]            ;48
00003e  f1080001          ADD      r0,r8,#1              ;48
000042  4af8              LDR      r2,|L1.1060|
000044  5411              STRB     r1,[r2,r0]            ;48
000046  f00008ff          AND      r8,r0,#0xff           ;47
                  |L1.74|
00004a  45b0              CMP      r8,r6                 ;47
00004c  dbf5              BLT      |L1.58|
00004e  1c70              ADDS     r0,r6,#1              ;49
000050  b2c0              UXTB     r0,r0                 ;49
000052  f7fffffe          BL       SPI_2_Trans
000056  e001              B        |L1.92|
                  |L1.88|
000058  2003              MOVS     r0,#3                 ;51
00005a  e7da              B        |L1.18|
                  |L1.92|
00005c  e02d              B        |L1.186|
                  |L1.94|
00005e  2d06              CMP      r5,#6                 ;56
000060  dc15              BGT      |L1.142|
000062  f0450040          ORR      r0,r5,#0x40           ;58
000066  49ef              LDR      r1,|L1.1060|
000068  7008              STRB     r0,[r1,#0]            ;58
00006a  f04f0800          MOV      r8,#0                 ;59
00006e  e007              B        |L1.128|
                  |L1.112|
000070  f8171008          LDRB     r1,[r7,r8]            ;60
000074  f1080001          ADD      r0,r8,#1              ;60
000078  4aea              LDR      r2,|L1.1060|
00007a  5411              STRB     r1,[r2,r0]            ;60
00007c  f00008ff          AND      r8,r0,#0xff           ;59
                  |L1.128|
000080  45b0              CMP      r8,r6                 ;59
000082  dbf5              BLT      |L1.112|
000084  1c70              ADDS     r0,r6,#1              ;61
000086  b2c0              UXTB     r0,r0                 ;61
000088  f7fffffe          BL       SPI_2_Trans
00008c  e001              B        |L1.146|
                  |L1.142|
00008e  2003              MOVS     r0,#3                 ;63
000090  e7bf              B        |L1.18|
                  |L1.146|
000092  e012              B        |L1.186|
                  |L1.148|
000094  2080              MOVS     r0,#0x80              ;71
000096  49e3              LDR      r1,|L1.1060|
000098  7008              STRB     r0,[r1,#0]            ;71
00009a  2001              MOVS     r0,#1                 ;72
00009c  f7fffffe          BL       SPI_2_Trans
0000a0  e00b              B        |L1.186|
                  |L1.162|
0000a2  20ff              MOVS     r0,#0xff              ;77
0000a4  49df              LDR      r1,|L1.1060|
0000a6  7008              STRB     r0,[r1,#0]            ;77
0000a8  201a              MOVS     r0,#0x1a              ;78
0000aa  f7fffffe          BL       SPI_2_Trans
0000ae  201a              MOVS     r0,#0x1a              ;79
0000b0  f7fffffe          BL       SPI_Rev_Data_Copy
0000b4  e001              B        |L1.186|
                  |L1.182|
0000b6  2002              MOVS     r0,#2                 ;83
0000b8  e7ab              B        |L1.18|
                  |L1.186|
0000ba  bf00              NOP                            ;53
0000bc  2000              MOVS     r0,#0                 ;86
0000be  e7a8              B        |L1.18|
;;;88     /////////////////
                          ENDP

                  Format_ADC_Data PROC
;;;94     
;;;95     void Format_ADC_Data(u8 *pu16Buf, u8 Byte_Num)
0000c0  b530              PUSH     {r4,r5,lr}
;;;96     {
;;;97      	u8 i;
;;;98     	u16 u16temp;
;;;99     	for (i=0; i<Byte_Num;i+=2)
0000c2  2200              MOVS     r2,#0
0000c4  e00a              B        |L1.220|
                  |L1.198|
;;;100    	{
;;;101    		u16temp = SPI_2_RcvBuf[i+1];
0000c6  4dd8              LDR      r5,|L1.1064|
0000c8  1c54              ADDS     r4,r2,#1
0000ca  5d2b              LDRB     r3,[r5,r4]
;;;102    		u16temp <<= 4;
0000cc  011b              LSLS     r3,r3,#4
;;;103    		u16temp |= 	SPI_2_RcvBuf[i];
0000ce  462c              MOV      r4,r5
0000d0  5ca4              LDRB     r4,[r4,r2]
0000d2  4323              ORRS     r3,r3,r4
;;;104    		*(pu16Buf++)=u16temp;
0000d4  f8003b01          STRB     r3,[r0],#1
0000d8  1c94              ADDS     r4,r2,#2              ;99
0000da  b2e2              UXTB     r2,r4                 ;99
                  |L1.220|
0000dc  428a              CMP      r2,r1                 ;99
0000de  dbf2              BLT      |L1.198|
;;;105    	}
;;;106    }
0000e0  bd30              POP      {r4,r5,pc}
;;;107    
                          ENDP

                  OSC_Ctrl_Init PROC
;;;111    //////////////
;;;112    void OSC_Ctrl_Init(void)
0000e2  48d2              LDR      r0,|L1.1068|
;;;113    {
;;;114    
;;;115    	RCC->APB2ENR|=1<<8;     //Ê¹ÄÜPORTGÊ±ÖÓ
0000e4  6980              LDR      r0,[r0,#0x18]
0000e6  f4407080          ORR      r0,r0,#0x100
0000ea  49d0              LDR      r1,|L1.1068|
0000ec  6188              STR      r0,[r1,#0x18]
;;;116       	GPIOG->CRL&=0XFFFFF0FF;	
0000ee  48d0              LDR      r0,|L1.1072|
0000f0  6800              LDR      r0,[r0,#0]
0000f2  f4206070          BIC      r0,r0,#0xf00
0000f6  49ce              LDR      r1,|L1.1072|
0000f8  6008              STR      r0,[r1,#0]
;;;117    	GPIOG->CRL|=0X00000300;
0000fa  4608              MOV      r0,r1
0000fc  6800              LDR      r0,[r0,#0]
0000fe  f4407040          ORR      r0,r0,#0x300
000102  6008              STR      r0,[r1,#0]
;;;118    	GPIOG->ODR|=1<<2; 
000104  4608              MOV      r0,r1
000106  68c0              LDR      r0,[r0,#0xc]
000108  f0400004          ORR      r0,r0,#4
00010c  60c8              STR      r0,[r1,#0xc]
;;;119    }
00010e  4770              BX       lr
;;;120    
                          ENDP

                  PCR_Cycle_Init PROC
;;;121    /////PCR cycle control initial
;;;122    void PCR_Cycle_Init(void)
000110  2100              MOVS     r1,#0
;;;123    {
;;;124    	u8 i;
;;;125    	PCR_Cycle_Control.CycleValid=INVALID;
000112  4ac8              LDR      r2,|L1.1076|
000114  7011              STRB     r1,[r2,#0]
;;;126    	PCR_Cycle_Control.TotalCycle=0;
000116  7051              STRB     r1,[r2,#1]
;;;127    	PCR_Cycle_Control.TotalSect=0;
000118  7091              STRB     r1,[r2,#2]
;;;128    	PCR_Cycle_Control.TotalStage=0;	
00011a  70d1              STRB     r1,[r2,#3]
;;;129    	for(i=0;i<MAX_STAGE;i++)
00011c  2000              MOVS     r0,#0
00011e  e008              B        |L1.306|
                  |L1.288|
;;;130    	{
;;;131    		PCR_Cycle_SetPoint[i].SetPoint.float_num=0;
000120  2100              MOVS     r1,#0
000122  4ac5              LDR      r2,|L1.1080|
000124  f8421030          STR      r1,[r2,r0,LSL #3]
;;;132    		PCR_Cycle_SetPoint[i].SetTime_Union.SetTime=0;
000128  eb0202c0          ADD      r2,r2,r0,LSL #3
00012c  8091              STRH     r1,[r2,#4]
00012e  1c41              ADDS     r1,r0,#1              ;129
000130  b2c8              UXTB     r0,r1                 ;129
                  |L1.306|
000132  280a              CMP      r0,#0xa               ;129
000134  dbf4              BLT      |L1.288|
;;;133    
;;;134    	}
;;;135    
;;;136    	CycleSTS=READY;
000136  2100              MOVS     r1,#0
000138  4ac0              LDR      r2,|L1.1084|
00013a  7011              STRB     r1,[r2,#0]
;;;137    }
00013c  4770              BX       lr
;;;138    
                          ENDP

                  SetPoint_Check PROC
;;;142    
;;;143    u8 SetPoint_Check(u8 Stage_Num,CycleTempType *pCycleArray)  /* check whether new data is out of range*/
00013e  b570              PUSH     {r4-r6,lr}
;;;144    {
000140  4606              MOV      r6,r0
000142  460c              MOV      r4,r1
;;;145    	u8 i;
;;;146    	for(i=0;i<Stage_Num;i++)
000144  2500              MOVS     r5,#0
000146  e016              B        |L1.374|
                  |L1.328|
;;;147    	{
;;;148    		if((pCycleArray[i].SetPoint.float_num < MIN_TEMPERATURE) || (pCycleArray[i].SetPoint.float_num>MAX_TEMPERATURE))
000148  f8540035          LDR      r0,[r4,r5,LSL #3]
00014c  49bc              LDR      r1,|L1.1088|
00014e  f7fffffe          BL       __aeabi_cfcmple
000152  d305              BCC      |L1.352|
000154  f8540035          LDR      r0,[r4,r5,LSL #3]
000158  49ba              LDR      r1,|L1.1092|
00015a  f7fffffe          BL       __aeabi_cfrcmple
00015e  d201              BCS      |L1.356|
                  |L1.352|
;;;149    			return INVALID;
000160  2000              MOVS     r0,#0
                  |L1.354|
;;;150    		if(pCycleArray[i].SetTime_Union.SetTime<1)
;;;151    			return INVALID;
;;;152    	}
;;;153    	return VALID;	
;;;154    }
000162  bd70              POP      {r4-r6,pc}
                  |L1.356|
000164  eb0400c5          ADD      r0,r4,r5,LSL #3       ;150
000168  8880              LDRH     r0,[r0,#4]            ;150
00016a  2801              CMP      r0,#1                 ;150
00016c  da01              BGE      |L1.370|
00016e  2000              MOVS     r0,#0                 ;151
000170  e7f7              B        |L1.354|
                  |L1.370|
000172  1c68              ADDS     r0,r5,#1              ;146
000174  b2c5              UXTB     r5,r0                 ;146
                  |L1.374|
000176  42b5              CMP      r5,r6                 ;146
000178  dbe6              BLT      |L1.328|
00017a  2001              MOVS     r0,#1                 ;153
00017c  e7f1              B        |L1.354|
;;;155    
                          ENDP

                  SetPoint_Copy PROC
;;;157    /* parameter : stage number , source address, destination address*/
;;;158    void SetPoint_Copy(u8 Stage_Num,CycleTempType *pSource, CycleTempType *pDest)
00017e  b530              PUSH     {r4,r5,lr}
;;;159    {
;;;160    	u8 i;
;;;161    	if(Stage_Num>0)
000180  2800              CMP      r0,#0
000182  dd0f              BLE      |L1.420|
;;;162    	{
;;;163    		for(i=0;i<Stage_Num;i++)
000184  2300              MOVS     r3,#0
000186  e00b              B        |L1.416|
                  |L1.392|
;;;164    		{
;;;165    			pDest[i].SetPoint.float_num=pSource[i].SetPoint.float_num;
000188  f8514033          LDR      r4,[r1,r3,LSL #3]
00018c  f8424033          STR      r4,[r2,r3,LSL #3]
;;;166    			pDest[i].SetTime_Union.SetTime=	pSource[i].SetTime_Union.SetTime;
000190  eb0104c3          ADD      r4,r1,r3,LSL #3
000194  88a4              LDRH     r4,[r4,#4]
000196  eb0205c3          ADD      r5,r2,r3,LSL #3
00019a  80ac              STRH     r4,[r5,#4]
00019c  1c5c              ADDS     r4,r3,#1              ;163
00019e  b2e3              UXTB     r3,r4                 ;163
                  |L1.416|
0001a0  4283              CMP      r3,r0                 ;163
0001a2  dbf1              BLT      |L1.392|
                  |L1.420|
;;;167    		}		
;;;168    	}
;;;169    }
0001a4  bd30              POP      {r4,r5,pc}
;;;170    
                          ENDP

                  SetPoint_Cycle_Start PROC
;;;171    
;;;172    void SetPoint_Cycle_Start(CycleTempType *p)
0001a6  4aa8              LDR      r2,|L1.1096|
;;;173    {
;;;174      	TempSet_2= p[0].SetPoint.float_num;
0001a8  6801              LDR      r1,[r0,#0]
0001aa  6011              STR      r1,[r2,#0]  ; TempSet_2
;;;175    	TempCtrlTime_Sec_2= p[0].SetTime_Union.SetTime;
0001ac  8881              LDRH     r1,[r0,#4]
0001ae  4aa7              LDR      r2,|L1.1100|
0001b0  8011              STRH     r1,[r2,#0]
;;;176    	TempTickLength_2=  TempCtrlTime_Sec_2 * TICK_PER_SEC;
0001b2  4611              MOV      r1,r2
0001b4  8809              LDRH     r1,[r1,#0]  ; TempCtrlTime_Sec_2
0001b6  eb010141          ADD      r1,r1,r1,LSL #1
0001ba  0449              LSLS     r1,r1,#17
0001bc  0c09              LSRS     r1,r1,#16
0001be  4aa4              LDR      r2,|L1.1104|
0001c0  8011              STRH     r1,[r2,#0]
;;;177    	TempCtrl_Active_2=1;
0001c2  2101              MOVS     r1,#1
0001c4  4aa3              LDR      r2,|L1.1108|
0001c6  7011              STRB     r1,[r2,#0]
;;;178    	TempValid |= 2;
0001c8  49a3              LDR      r1,|L1.1112|
0001ca  7809              LDRB     r1,[r1,#0]  ; TempValid
0001cc  f0410102          ORR      r1,r1,#2
0001d0  4aa1              LDR      r2,|L1.1112|
0001d2  7011              STRB     r1,[r2,#0]
;;;179    
;;;180    	Current_Stage=0;
0001d4  2100              MOVS     r1,#0
0001d6  4aa1              LDR      r2,|L1.1116|
0001d8  7011              STRB     r1,[r2,#0]
;;;181    	Current_Cycle=0;
0001da  1c52              ADDS     r2,r2,#1
0001dc  7011              STRB     r1,[r2,#0]
;;;182    }
0001de  4770              BX       lr
;;;183    
                          ENDP

                  SetPoint_PrePump_Start PROC
;;;184    void SetPoint_PrePump_Start(void)
0001e0  489f              LDR      r0,|L1.1120|
;;;185    {
;;;186    	TempSet_2= PE_Cycle_SetPoint[0].SetPoint.float_num;
0001e2  6800              LDR      r0,[r0,#0]  ; PE_Cycle_SetPoint
0001e4  4998              LDR      r1,|L1.1096|
0001e6  6008              STR      r0,[r1,#0]  ; TempSet_2
;;;187    	TempCtrlTime_Sec_2= PE_Cycle_SetPoint[0].SetTime_Union.SetTime;
0001e8  489d              LDR      r0,|L1.1120|
0001ea  8880              LDRH     r0,[r0,#4]  ; PE_Cycle_SetPoint
0001ec  4997              LDR      r1,|L1.1100|
0001ee  8008              STRH     r0,[r1,#0]
;;;188    	TempTickLength_2=  TempCtrlTime_Sec_2 * TICK_PER_SEC;
0001f0  4608              MOV      r0,r1
0001f2  8800              LDRH     r0,[r0,#0]  ; TempCtrlTime_Sec_2
0001f4  eb000040          ADD      r0,r0,r0,LSL #1
0001f8  0440              LSLS     r0,r0,#17
0001fa  0c00              LSRS     r0,r0,#16
0001fc  4994              LDR      r1,|L1.1104|
0001fe  8008              STRH     r0,[r1,#0]
;;;189    	TempCtrl_Active_2=1;
000200  2001              MOVS     r0,#1
000202  4994              LDR      r1,|L1.1108|
000204  7008              STRB     r0,[r1,#0]
;;;190    	TempValid |= 2;
000206  4894              LDR      r0,|L1.1112|
000208  7800              LDRB     r0,[r0,#0]  ; TempValid
00020a  f0400002          ORR      r0,r0,#2
00020e  4992              LDR      r1,|L1.1112|
000210  7008              STRB     r0,[r1,#0]
;;;191    }
000212  4770              BX       lr
;;;192    
                          ENDP

                  FanCtrl_Auto PROC
;;;282    
;;;283    void FanCtrl_Auto(u8 ctrl)	// auto control the fan, based on CSR mode bit
000214  b510              PUSH     {r4,lr}
;;;284    {
000216  4604              MOV      r4,r0
;;;285    	FanCSR = (FanCSR & FAN_MODE_MSK)? FanCSR:(ctrl & FAN_CTRL_MSK); 
000218  4890              LDR      r0,|L1.1116|
00021a  1cc0              ADDS     r0,r0,#3
00021c  7800              LDRB     r0,[r0,#0]  ; FanCSR
00021e  f0100f02          TST      r0,#2
000222  d003              BEQ      |L1.556|
000224  488d              LDR      r0,|L1.1116|
000226  1cc0              ADDS     r0,r0,#3
000228  7800              LDRB     r0,[r0,#0]  ; FanCSR
00022a  e001              B        |L1.560|
                  |L1.556|
00022c  f0040001          AND      r0,r4,#1
                  |L1.560|
000230  498a              LDR      r1,|L1.1116|
000232  1cc9              ADDS     r1,r1,#3
000234  7008              STRB     r0,[r1,#0]
;;;286    	FAN = (FanCSR & FAN_CTRL_MSK);
000236  4608              MOV      r0,r1
000238  7800              LDRB     r0,[r0,#0]  ; FanCSR
00023a  f0000001          AND      r0,r0,#1
00023e  4989              LDR      r1,|L1.1124|
000240  6008              STR      r0,[r1,#0]
;;;287    	Fan_Echo(FanCSR);
000242  4886              LDR      r0,|L1.1116|
000244  1cc0              ADDS     r0,r0,#3
000246  7800              LDRB     r0,[r0,#0]  ; FanCSR
000248  f7fffffe          BL       Fan_Echo
;;;288    }
00024c  bd10              POP      {r4,pc}
;;;289    
                          ENDP

                  SetPoint_Extension_Start PROC
;;;192    
;;;193    void SetPoint_Extension_Start(void)
00024e  b510              PUSH     {r4,lr}
;;;194    {
;;;195    	TempValid &= ~0x2;
000250  4881              LDR      r0,|L1.1112|
000252  7800              LDRB     r0,[r0,#0]  ; TempValid
000254  f0200002          BIC      r0,r0,#2
000258  497f              LDR      r1,|L1.1112|
00025a  7008              STRB     r0,[r1,#0]
;;;196    	TempCtrl_Active_2=1;	
00025c  2001              MOVS     r0,#1
00025e  497d              LDR      r1,|L1.1108|
000260  7008              STRB     r0,[r1,#0]
;;;197      	PID_Clear(SENSOR2_INDEX);
000262  f7fffffe          BL       PID_Clear
;;;198    	if(TempSet_2>PE_Cycle_SetPoint[1].SetPoint.float_num)
000266  487e              LDR      r0,|L1.1120|
000268  6881              LDR      r1,[r0,#8]  ; PE_Cycle_SetPoint
00026a  4877              LDR      r0,|L1.1096|
00026c  6800              LDR      r0,[r0,#0]  ; TempSet_2
00026e  f7fffffe          BL       __aeabi_cfrcmple
000272  d203              BCS      |L1.636|
;;;199        	FanCtrl_Auto(FAN_CTRL_MSK);	 // cooling stage, Fan runs
000274  2001              MOVS     r0,#1
000276  f7fffffe          BL       FanCtrl_Auto
00027a  e002              B        |L1.642|
                  |L1.636|
;;;200    	else 
;;;201    	    FanCtrl_Auto(0);
00027c  2000              MOVS     r0,#0
00027e  f7fffffe          BL       FanCtrl_Auto
                  |L1.642|
;;;202    
;;;203    	TempSet_2= PE_Cycle_SetPoint[1].SetPoint.float_num;
000282  4877              LDR      r0,|L1.1120|
000284  6880              LDR      r0,[r0,#8]  ; PE_Cycle_SetPoint
000286  4970              LDR      r1,|L1.1096|
000288  6008              STR      r0,[r1,#0]  ; TempSet_2
;;;204    	TempCtrlTime_Sec_2= PE_Cycle_SetPoint[1].SetTime_Union.SetTime;
00028a  4875              LDR      r0,|L1.1120|
00028c  8980              LDRH     r0,[r0,#0xc]
00028e  496f              LDR      r1,|L1.1100|
000290  8008              STRH     r0,[r1,#0]
;;;205    	TempTickLength_2=  TempCtrlTime_Sec_2 * TICK_PER_SEC;
000292  4608              MOV      r0,r1
000294  8800              LDRH     r0,[r0,#0]  ; TempCtrlTime_Sec_2
000296  eb000040          ADD      r0,r0,r0,LSL #1
00029a  0440              LSLS     r0,r0,#17
00029c  0c00              LSRS     r0,r0,#16
00029e  496c              LDR      r1,|L1.1104|
0002a0  8008              STRH     r0,[r1,#0]
;;;206    	TempCtrl_Active_2=1;
0002a2  2001              MOVS     r0,#1
0002a4  496b              LDR      r1,|L1.1108|
0002a6  7008              STRB     r0,[r1,#0]
;;;207    	TempValid |= 2;	
0002a8  486b              LDR      r0,|L1.1112|
0002aa  7800              LDRB     r0,[r0,#0]  ; TempValid
0002ac  f0400002          ORR      r0,r0,#2
0002b0  4969              LDR      r1,|L1.1112|
0002b2  7008              STRB     r0,[r1,#0]
;;;208    }
0002b4  bd10              POP      {r4,pc}
;;;209    
                          ENDP

                  Cycle_Check PROC
;;;210    u8 Cycle_Check(void)
0002b6  4869              LDR      r0,|L1.1116|
;;;211    {
;;;212    	return Current_Cycle;
0002b8  1c40              ADDS     r0,r0,#1
0002ba  7800              LDRB     r0,[r0,#0]  ; Current_Cycle
;;;213    }
0002bc  4770              BX       lr
;;;214    
                          ENDP

                  Sect_Check PROC
;;;215    u8 Sect_Check(void)
0002be  4867              LDR      r0,|L1.1116|
;;;216    {
;;;217    	return Current_Sect;
0002c0  1c80              ADDS     r0,r0,#2
0002c2  7800              LDRB     r0,[r0,#0]  ; Current_Sect
;;;218    }
0002c4  4770              BX       lr
;;;219    
                          ENDP

                  Stage_Check PROC
;;;220    u8 Stage_Check(void)
0002c6  4865              LDR      r0,|L1.1116|
;;;221    {
;;;222    	return Current_Stage;
0002c8  7800              LDRB     r0,[r0,#0]  ; Current_Stage
;;;223    }
0002ca  4770              BX       lr
;;;224    
                          ENDP

                  Cycle_Set PROC
;;;225    void Cycle_Set(u8 cycle)
0002cc  4963              LDR      r1,|L1.1116|
;;;226    {
;;;227    	Current_Cycle=cycle;	
0002ce  1c49              ADDS     r1,r1,#1
0002d0  7008              STRB     r0,[r1,#0]
;;;228    }
0002d2  4770              BX       lr
;;;229    void Sect_Set(u8 sect)
                          ENDP

                  Sect_Set PROC
0002d4  4961              LDR      r1,|L1.1116|
;;;230    {
;;;231    	Current_Sect=sect;	
0002d6  1c89              ADDS     r1,r1,#2
0002d8  7008              STRB     r0,[r1,#0]
;;;232    }
0002da  4770              BX       lr
;;;233    void Stage_Set(u8 stage)
                          ENDP

                  Stage_Set PROC
0002dc  495f              LDR      r1,|L1.1116|
;;;234    {
;;;235    	Current_Stage=stage;
0002de  7008              STRB     r0,[r1,#0]
;;;236    }
0002e0  4770              BX       lr
;;;237    void Cycle_INC(void)
                          ENDP

                  Cycle_INC PROC
0002e2  485e              LDR      r0,|L1.1116|
;;;238    {
;;;239    	Current_Cycle++;
0002e4  1c40              ADDS     r0,r0,#1
0002e6  7800              LDRB     r0,[r0,#0]  ; Current_Cycle
0002e8  1c40              ADDS     r0,r0,#1
0002ea  495c              LDR      r1,|L1.1116|
0002ec  1c49              ADDS     r1,r1,#1
0002ee  7008              STRB     r0,[r1,#0]
;;;240    }
0002f0  4770              BX       lr
;;;241    
                          ENDP

                  Sect_INC PROC
;;;242    void Sect_INC(void)
0002f2  485a              LDR      r0,|L1.1116|
;;;243    {
;;;244    	Current_Sect++;
0002f4  1c80              ADDS     r0,r0,#2
0002f6  7800              LDRB     r0,[r0,#0]  ; Current_Sect
0002f8  1c40              ADDS     r0,r0,#1
0002fa  4958              LDR      r1,|L1.1116|
0002fc  1c89              ADDS     r1,r1,#2
0002fe  7008              STRB     r0,[r1,#0]
;;;245    }
000300  4770              BX       lr
;;;246    void Stage_INC(void)
                          ENDP

                  Stage_INC PROC
000302  4856              LDR      r0,|L1.1116|
;;;247    {
;;;248    	Current_Stage++;
000304  7800              LDRB     r0,[r0,#0]  ; Current_Stage
000306  1c40              ADDS     r0,r0,#1
000308  4954              LDR      r1,|L1.1116|
00030a  7008              STRB     r0,[r1,#0]
;;;249    }
00030c  4770              BX       lr
;;;250    
                          ENDP

                  TempCtrl_Reload_InCycle PROC
;;;251    void TempCtrl_Reload_InCycle(void)
00030e  b510              PUSH     {r4,lr}
;;;252    {
;;;253    	TempValid &= ~0x2;
000310  4851              LDR      r0,|L1.1112|
000312  7800              LDRB     r0,[r0,#0]  ; TempValid
000314  f0200002          BIC      r0,r0,#2
000318  494f              LDR      r1,|L1.1112|
00031a  7008              STRB     r0,[r1,#0]
;;;254    	TempCtrl_Active_2=1;	
00031c  2001              MOVS     r0,#1
00031e  494d              LDR      r1,|L1.1108|
000320  7008              STRB     r0,[r1,#0]
;;;255      	PID_Clear(SENSOR2_INDEX);
000322  f7fffffe          BL       PID_Clear
;;;256    	if(TempSet_2>PCR_Cycle_SetPoint[Current_Stage].SetPoint.float_num) // added @0531 for cooling 
000326  4844              LDR      r0,|L1.1080|
000328  4a4c              LDR      r2,|L1.1116|
00032a  7812              LDRB     r2,[r2,#0]  ; Current_Stage
00032c  f8501032          LDR      r1,[r0,r2,LSL #3]
000330  4845              LDR      r0,|L1.1096|
000332  6800              LDR      r0,[r0,#0]  ; TempSet_2
000334  f7fffffe          BL       __aeabi_cfrcmple
000338  d203              BCS      |L1.834|
;;;257        	FanCtrl_Auto(FAN_CTRL_MSK);	 // cooling stage, Fan runs
00033a  2001              MOVS     r0,#1
00033c  f7fffffe          BL       FanCtrl_Auto
000340  e002              B        |L1.840|
                  |L1.834|
;;;258    	else 
;;;259    	    FanCtrl_Auto(0);
000342  2000              MOVS     r0,#0
000344  f7fffffe          BL       FanCtrl_Auto
                  |L1.840|
;;;260    
;;;261    	TempSet_2= PCR_Cycle_SetPoint[Current_Stage].SetPoint.float_num;
000348  483b              LDR      r0,|L1.1080|
00034a  4944              LDR      r1,|L1.1116|
00034c  7809              LDRB     r1,[r1,#0]  ; Current_Stage
00034e  f8500031          LDR      r0,[r0,r1,LSL #3]
000352  493d              LDR      r1,|L1.1096|
000354  6008              STR      r0,[r1,#0]  ; TempSet_2
;;;262    	TempCtrlTime_Sec_2= PCR_Cycle_SetPoint[Current_Stage].SetTime_Union.SetTime;
000356  4838              LDR      r0,|L1.1080|
000358  4940              LDR      r1,|L1.1116|
00035a  7809              LDRB     r1,[r1,#0]  ; Current_Stage
00035c  eb0000c1          ADD      r0,r0,r1,LSL #3
000360  8880              LDRH     r0,[r0,#4]
000362  493a              LDR      r1,|L1.1100|
000364  8008              STRH     r0,[r1,#0]
;;;263    	TempTickLength_2=  TempCtrlTime_Sec_2 * TICK_PER_SEC;
000366  4608              MOV      r0,r1
000368  8800              LDRH     r0,[r0,#0]  ; TempCtrlTime_Sec_2
00036a  eb000040          ADD      r0,r0,r0,LSL #1
00036e  0440              LSLS     r0,r0,#17
000370  0c00              LSRS     r0,r0,#16
000372  4937              LDR      r1,|L1.1104|
000374  8008              STRH     r0,[r1,#0]
;;;264    	//TempCtrl_Active_2=1;
;;;265    	TempValid |= 2;	
000376  4838              LDR      r0,|L1.1112|
000378  7800              LDRB     r0,[r0,#0]  ; TempValid
00037a  f0400002          ORR      r0,r0,#2
00037e  4936              LDR      r1,|L1.1112|
000380  7008              STRB     r0,[r1,#0]
;;;266    }
000382  bd10              POP      {r4,pc}
;;;267    
                          ENDP

                  FanCtrl_Init PROC
;;;268    
;;;269    void FanCtrl_Init(void)
000384  b510              PUSH     {r4,lr}
;;;270    {
;;;271      FAN=LOW;
000386  2000              MOVS     r0,#0
000388  4936              LDR      r1,|L1.1124|
00038a  6008              STR      r0,[r1,#0]
;;;272      FanCSR=0;
00038c  4933              LDR      r1,|L1.1116|
00038e  1cc9              ADDS     r1,r1,#3
000390  7008              STRB     r0,[r1,#0]
;;;273      Fan_Echo(FanCSR);
000392  4608              MOV      r0,r1
000394  7800              LDRB     r0,[r0,#0]  ; FanCSR
000396  f7fffffe          BL       Fan_Echo
;;;274    }
00039a  bd10              POP      {r4,pc}
;;;275    
                          ENDP

                  FanCtrl_Force PROC
;;;276    void FanCtrl_Force(u8 ctrl)	 // manual control the fan, mode bit toggle too.
00039c  b510              PUSH     {r4,lr}
;;;277    {
00039e  4604              MOV      r4,r0
;;;278    	FanCSR = (FAN_MODE_MSK | (ctrl & FAN_CTRL_MSK));
0003a0  f0040001          AND      r0,r4,#1
0003a4  f0400002          ORR      r0,r0,#2
0003a8  492c              LDR      r1,|L1.1116|
0003aa  1cc9              ADDS     r1,r1,#3
0003ac  7008              STRB     r0,[r1,#0]
;;;279    	FAN = (ctrl & FAN_CTRL_MSK);
0003ae  f0040001          AND      r0,r4,#1
0003b2  492c              LDR      r1,|L1.1124|
0003b4  6008              STR      r0,[r1,#0]
;;;280    	Fan_Echo(FanCSR);
0003b6  4829              LDR      r0,|L1.1116|
0003b8  1cc0              ADDS     r0,r0,#3
0003ba  7800              LDRB     r0,[r0,#0]  ; FanCSR
0003bc  f7fffffe          BL       Fan_Echo
;;;281    }
0003c0  bd10              POP      {r4,pc}
;;;282    
                          ENDP

                  FanMode_Clear PROC
;;;289    
;;;290    void FanMode_Clear(void)
0003c2  4826              LDR      r0,|L1.1116|
;;;291    {
;;;292    	FanCSR &= ~(FAN_MODE_MSK);	
0003c4  1cc0              ADDS     r0,r0,#3
0003c6  7800              LDRB     r0,[r0,#0]  ; FanCSR
0003c8  f0200002          BIC      r0,r0,#2
0003cc  4923              LDR      r1,|L1.1116|
0003ce  1cc9              ADDS     r1,r1,#3
0003d0  7008              STRB     r0,[r1,#0]
;;;293    }
0003d2  4770              BX       lr
;;;294    
                          ENDP

                  FanCSR_Read PROC
;;;295    u8 FanCSR_Read(void)
0003d4  4821              LDR      r0,|L1.1116|
;;;296    {
;;;297    	return(FanCSR & (FAN_MODE_MSK | FAN_CTRL_MSK));
0003d6  1cc0              ADDS     r0,r0,#3
0003d8  7800              LDRB     r0,[r0,#0]  ; FanCSR
0003da  f0000003          AND      r0,r0,#3
;;;298    }
0003de  4770              BX       lr
;;;299    
                          ENDP

                  Cycle_Control_Start PROC
;;;300    void Cycle_Control_Start(void)
0003e0  b510              PUSH     {r4,lr}
;;;301    {
;;;302    	PCR_Cycle_Control.CycleValid=INIT;
0003e2  2002              MOVS     r0,#2
0003e4  4913              LDR      r1,|L1.1076|
0003e6  7008              STRB     r0,[r1,#0]
;;;303    	Current_Cycle=Current_Sect=Current_Stage=0;
0003e8  2000              MOVS     r0,#0
0003ea  491c              LDR      r1,|L1.1116|
0003ec  7008              STRB     r0,[r1,#0]
0003ee  1c89              ADDS     r1,r1,#2
0003f0  7008              STRB     r0,[r1,#0]
0003f2  1e49              SUBS     r1,r1,#1
0003f4  7008              STRB     r0,[r1,#0]
;;;304    	CycleSTS=WAIT;			 // going to start backgroud sensor
0003f6  2001              MOVS     r0,#1
0003f8  4910              LDR      r1,|L1.1084|
0003fa  7008              STRB     r0,[r1,#0]
;;;305    	TempSet=TempPumpSet;
0003fc  481a              LDR      r0,|L1.1128|
0003fe  6800              LDR      r0,[r0,#0]  ; TempPumpSet
000400  491a              LDR      r1,|L1.1132|
000402  6008              STR      r0,[r1,#0]  ; TempSet
;;;306    	TempCtrl_Active=1;
000404  2001              MOVS     r0,#1
000406  491a              LDR      r1,|L1.1136|
000408  7008              STRB     r0,[r1,#0]
;;;307    	TempValid |= 1;
00040a  4813              LDR      r0,|L1.1112|
00040c  7800              LDRB     r0,[r0,#0]  ; TempValid
00040e  f0400001          ORR      r0,r0,#1
000412  4911              LDR      r1,|L1.1112|
000414  7008              STRB     r0,[r1,#0]
;;;308    	TempTickLength=1;        // in case that timout
000416  2001              MOVS     r0,#1
000418  4916              LDR      r1,|L1.1140|
00041a  8008              STRH     r0,[r1,#0]
;;;309    	ClearMsg();				 // in case that any pend msg 
00041c  f7fffffe          BL       ClearMsg
;;;310    }
000420  bd10              POP      {r4,pc}
000422  0000              DCW      0x0000
                  |L1.1060|
                          DCD      SPI_2_SendBuf
                  |L1.1064|
                          DCD      SPI_2_RcvBuf
                  |L1.1068|
                          DCD      0x40021000
                  |L1.1072|
                          DCD      0x40012000
                  |L1.1076|
                          DCD      PCR_Cycle_Control
                  |L1.1080|
                          DCD      PCR_Cycle_SetPoint
                  |L1.1084|
                          DCD      CycleSTS
                  |L1.1088|
                          DCD      0x41100000
                  |L1.1092|
                          DCD      0x42f00000
                  |L1.1096|
                          DCD      TempSet_2
                  |L1.1100|
                          DCD      TempCtrlTime_Sec_2
                  |L1.1104|
                          DCD      TempTickLength_2
                  |L1.1108|
                          DCD      TempCtrl_Active_2
                  |L1.1112|
                          DCD      TempValid
                  |L1.1116|
                          DCD      ||.data||+0x8
                  |L1.1120|
                          DCD      PE_Cycle_SetPoint
                  |L1.1124|
                          DCD      0x42238190
                  |L1.1128|
                          DCD      TempPumpSet
                  |L1.1132|
                          DCD      TempSet
                  |L1.1136|
                          DCD      TempCtrl_Active
                  |L1.1140|
                          DCD      TempTickLength
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  PIX_Buf
                          %        16
                  REG_Buf
                          %        16

                          AREA ||.data||, DATA, ALIGN=1

                  OSC_Status
000000  00                DCB      0x00
                  OSC_mode
000001  00                DCB      0x00
                  OSC_Busy
000002  0000              DCB      0x00,0x00
                  UserCountMS
000004  0001              DCW      0x0001
                  BaseCounter
000006  0000              DCW      0x0000
                  Current_Stage
000008  00                DCB      0x00
                  Current_Cycle
000009  00                DCB      0x00
                  Current_Sect
00000a  00                DCB      0x00
                  FanCSR
00000b  00                DCB      0x00
