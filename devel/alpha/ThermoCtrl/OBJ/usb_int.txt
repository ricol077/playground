; generated by ARM C/C++ Compiler with , RVCT4.0 [Build 524] for uVision
; commandline ArmCC [--debug -c --asm --interleave -o..\OBJ\usb_int.o --depend=..\OBJ\usb_int.d --device=DARMSTM --apcs=interwork -O0 -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\USMART -I..\HARDWARE\LED -I..\HARDWARE\BEEP -I..\HARDWARE\KEY -I..\HARDWARE\EXTI -I..\HARDWARE\WDG -I..\HARDWARE\TIMER -I..\HARDWARE\TPAD -I..\HARDWARE\OLED -I..\HARDWARE\LCD -I..\HARDWARE\RTC -I..\HARDWARE\WKUP -I..\HARDWARE\ADC -I..\HARDWARE\DAC -I..\HARDWARE\DMA -I..\HARDWARE\24CXX -I..\HARDWARE\SPI -I..\HARDWARE\FLASH -I..\USER -I..\USB\LIB -I..\USB\CONFIG -IC:\Keil\ARM\INC\ST\STM32F10x --omf_browse=..\OBJ\usb_int.crf ..\USB\LIB\usb_int.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  CTR_LP PROC
;;;40     *******************************************************************************/
;;;41     void CTR_LP(void)
000000  b510              PUSH     {r4,lr}
;;;42     {
;;;43       u32 wEPVal = 0;
000002  2400              MOVS     r4,#0
;;;44       /* stay in loop while pending ints */
;;;45       while (((wIstr = _GetISTR()) & ISTR_CTR) != 0)
000004  e18a              B        |L1.796|
                  |L1.6|
;;;46       {
;;;47         _SetISTR((u16)CLR_CTR); /* clear CTR flag */
000006  f64770ff          MOV      r0,#0x7fff
00000a  49f5              LDR      r1,|L1.992|
00000c  6008              STR      r0,[r1,#0]
;;;48         /* extract highest priority endpoint number */
;;;49         EPindex = (u8)(wIstr & ISTR_EP_ID);
00000e  48f5              LDR      r0,|L1.996|
000010  8800              LDRH     r0,[r0,#0]  ; wIstr
000012  f000000f          AND      r0,r0,#0xf
000016  49f4              LDR      r1,|L1.1000|
000018  7008              STRB     r0,[r1,#0]
;;;50         if (EPindex == 0)
00001a  4608              MOV      r0,r1
00001c  7800              LDRB     r0,[r0,#0]  ; EPindex
00001e  2800              CMP      r0,#0
000020  d17e              BNE      |L1.288|
;;;51         {
;;;52           /* Decode and service control endpoint interrupt */
;;;53           /* calling related service routine */
;;;54           /* (Setup0_Process, In0_Process, Out0_Process) */
;;;55     
;;;56           /* save RX & TX status */
;;;57           /* and set both to NAK */
;;;58           SaveRState = _GetEPRxStatus(ENDP0);
000022  48ef              LDR      r0,|L1.992|
000024  3844              SUBS     r0,r0,#0x44
000026  6800              LDR      r0,[r0,#0]
000028  f4005040          AND      r0,r0,#0x3000
00002c  49ef              LDR      r1,|L1.1004|
00002e  8008              STRH     r0,[r1,#0]
;;;59           SaveTState = _GetEPTxStatus(ENDP0);
000030  48ef              LDR      r0,|L1.1008|
000032  f8d00c00          LDR      r0,[r0,#0xc00]
000036  f0000030          AND      r0,r0,#0x30
00003a  49ee              LDR      r1,|L1.1012|
00003c  8008              STRH     r0,[r1,#0]
;;;60           _SetEPRxStatus(ENDP0, EP_RX_NAK);
00003e  49e8              LDR      r1,|L1.992|
000040  3944              SUBS     r1,r1,#0x44
000042  6809              LDR      r1,[r1,#0]
000044  b289              UXTH     r1,r1
000046  f64b728f          MOV      r2,#0xbf8f
00004a  ea010002          AND      r0,r1,r2
00004e  bf00              NOP      
000050  f4805000          EOR      r0,r0,#0x2000
000054  49e2              LDR      r1,|L1.992|
000056  3944              SUBS     r1,r1,#0x44
000058  6008              STR      r0,[r1,#0]
;;;61           _SetEPTxStatus(ENDP0, EP_TX_NAK);
00005a  49e5              LDR      r1,|L1.1008|
00005c  f8d11c00          LDR      r1,[r1,#0xc00]
000060  b289              UXTH     r1,r1
000062  f64872bf          MOV      r2,#0x8fbf
000066  ea010002          AND      r0,r1,r2
00006a  bf00              NOP      
00006c  f0800020          EOR      r0,r0,#0x20
000070  49db              LDR      r1,|L1.992|
000072  3944              SUBS     r1,r1,#0x44
000074  6008              STR      r0,[r1,#0]
;;;62     
;;;63     
;;;64           /* DIR bit = origin of the interrupt */
;;;65     
;;;66           if ((wIstr & ISTR_DIR) == 0)
000076  48db              LDR      r0,|L1.996|
000078  8800              LDRH     r0,[r0,#0]  ; wIstr
00007a  f0100f10          TST      r0,#0x10
00007e  d13d              BNE      |L1.252|
;;;67           {
;;;68             /* DIR = 0 */
;;;69     
;;;70             /* DIR = 0      => IN  int */
;;;71             /* DIR = 0 implies that (EP_CTR_TX = 1) always  */
;;;72     
;;;73     
;;;74             _ClearEP_CTR_TX(ENDP0);
000080  4608              MOV      r0,r1
000082  6800              LDR      r0,[r0,#0]
000084  b280              UXTH     r0,r0
000086  f648710f          MOV      r1,#0x8f0f
00008a  4008              ANDS     r0,r0,r1
00008c  49d8              LDR      r1,|L1.1008|
00008e  f8c10c00          STR      r0,[r1,#0xc00]
;;;75             In0_Process();
000092  f7fffffe          BL       In0_Process
;;;76     
;;;77                /* before terminate set Tx & Rx status */
;;;78               _SetEPRxStatus(ENDP0, SaveRState);
000096  49d2              LDR      r1,|L1.992|
000098  3944              SUBS     r1,r1,#0x44
00009a  6809              LDR      r1,[r1,#0]
00009c  b289              UXTH     r1,r1
00009e  f64b728f          MOV      r2,#0xbf8f
0000a2  ea010002          AND      r0,r1,r2
0000a6  49d1              LDR      r1,|L1.1004|
0000a8  8809              LDRH     r1,[r1,#0]  ; SaveRState
0000aa  f4115f80          TST      r1,#0x1000
0000ae  d001              BEQ      |L1.180|
0000b0  f4805080          EOR      r0,r0,#0x1000
                  |L1.180|
0000b4  49cd              LDR      r1,|L1.1004|
0000b6  8809              LDRH     r1,[r1,#0]  ; SaveRState
0000b8  f4115f00          TST      r1,#0x2000
0000bc  d001              BEQ      |L1.194|
0000be  f4805000          EOR      r0,r0,#0x2000
                  |L1.194|
0000c2  49c7              LDR      r1,|L1.992|
0000c4  3944              SUBS     r1,r1,#0x44
0000c6  6008              STR      r0,[r1,#0]
;;;79               _SetEPTxStatus(ENDP0, SaveTState);
0000c8  49c9              LDR      r1,|L1.1008|
0000ca  f8d11c00          LDR      r1,[r1,#0xc00]
0000ce  b289              UXTH     r1,r1
0000d0  f64872bf          MOV      r2,#0x8fbf
0000d4  ea010002          AND      r0,r1,r2
0000d8  49c6              LDR      r1,|L1.1012|
0000da  8809              LDRH     r1,[r1,#0]  ; SaveTState
0000dc  f0110f10          TST      r1,#0x10
0000e0  d001              BEQ      |L1.230|
0000e2  f0800010          EOR      r0,r0,#0x10
                  |L1.230|
0000e6  49c3              LDR      r1,|L1.1012|
0000e8  8809              LDRH     r1,[r1,#0]  ; SaveTState
0000ea  f0110f20          TST      r1,#0x20
0000ee  d001              BEQ      |L1.244|
0000f0  f0800020          EOR      r0,r0,#0x20
                  |L1.244|
0000f4  49ba              LDR      r1,|L1.992|
0000f6  3944              SUBS     r1,r1,#0x44
0000f8  6008              STR      r0,[r1,#0]
                  |L1.250|
;;;80               return;
;;;81           }
;;;82           else
;;;83           {
;;;84             /* DIR = 1 */
;;;85     
;;;86             /* DIR = 1 & CTR_RX       => SETUP or OUT int */
;;;87             /* DIR = 1 & (CTR_TX | CTR_RX) => 2 int pending */
;;;88     
;;;89             wEPVal = _GetENDPOINT(ENDP0);
;;;90             if ((wEPVal & EP_CTR_TX) != 0)
;;;91             {
;;;92               _ClearEP_CTR_TX(ENDP0);
;;;93               In0_Process();
;;;94               /* before terminate set Tx & Rx status */
;;;95               _SetEPRxStatus(ENDP0, SaveRState);
;;;96               _SetEPTxStatus(ENDP0, SaveTState);
;;;97               return;
;;;98             }
;;;99             else if ((wEPVal &EP_SETUP) != 0)
;;;100            {
;;;101              _ClearEP_CTR_RX(ENDP0); /* SETUP bit kept frozen while CTR_RX = 1 */
;;;102              Setup0_Process();
;;;103              /* before terminate set Tx & Rx status */
;;;104              _SetEPRxStatus(ENDP0, SaveRState);
;;;105              _SetEPTxStatus(ENDP0, SaveTState);
;;;106              return;
;;;107            }
;;;108    
;;;109            else if ((wEPVal & EP_CTR_RX) != 0)
;;;110            {
;;;111              _ClearEP_CTR_RX(ENDP0);
;;;112              Out0_Process();
;;;113              /* before terminate set Tx & Rx status */
;;;114              _SetEPRxStatus(ENDP0, SaveRState);
;;;115              _SetEPTxStatus(ENDP0, SaveTState);
;;;116              return;
;;;117            }
;;;118          }
;;;119        }/* if(EPindex == 0) */
;;;120        else
;;;121        {
;;;122          /* Decode and service non control endpoints interrupt  */
;;;123    
;;;124          /* process related endpoint register */
;;;125          wEPVal = _GetENDPOINT(EPindex);
;;;126          if ((wEPVal & EP_CTR_RX) != 0)
;;;127          {
;;;128            /* clear int flag */
;;;129            _ClearEP_CTR_RX(EPindex);
;;;130    
;;;131            /* call OUT service function */
;;;132            (*pEpInt_OUT[EPindex-1])();
;;;133    
;;;134          } /* if((wEPVal & EP_CTR_RX) */
;;;135    
;;;136          if ((wEPVal & EP_CTR_TX) != 0)
;;;137          {
;;;138            /* clear int flag */
;;;139            _ClearEP_CTR_TX(EPindex);
;;;140    
;;;141            /* call IN service function */
;;;142            (*pEpInt_IN[EPindex-1])();
;;;143          } /* if((wEPVal & EP_CTR_TX) != 0) */
;;;144    
;;;145        }/* if(EPindex == 0) else */
;;;146    
;;;147      }/* while(...) */
;;;148    }
0000fa  bd10              POP      {r4,pc}
                  |L1.252|
0000fc  48b8              LDR      r0,|L1.992|
0000fe  3844              SUBS     r0,r0,#0x44           ;89
000100  6800              LDR      r0,[r0,#0]            ;89
000102  b284              UXTH     r4,r0                 ;89
000104  f0140f80          TST      r4,#0x80              ;90
000108  d040              BEQ      |L1.396|
00010a  48b5              LDR      r0,|L1.992|
00010c  3844              SUBS     r0,r0,#0x44           ;92
00010e  6800              LDR      r0,[r0,#0]            ;92
000110  b280              UXTH     r0,r0                 ;92
000112  f648710f          MOV      r1,#0x8f0f            ;92
000116  4008              ANDS     r0,r0,r1              ;92
000118  49b5              LDR      r1,|L1.1008|
00011a  f8c10c00          STR      r0,[r1,#0xc00]        ;92
00011e  e000              B        |L1.290|
                  |L1.288|
000120  e0ba              B        |L1.664|
                  |L1.290|
000122  f7fffffe          BL       In0_Process
000126  49ae              LDR      r1,|L1.992|
000128  3944              SUBS     r1,r1,#0x44           ;95
00012a  6809              LDR      r1,[r1,#0]            ;95
00012c  b289              UXTH     r1,r1                 ;95
00012e  f64b728f          MOV      r2,#0xbf8f            ;95
000132  ea010002          AND      r0,r1,r2              ;95
000136  49ad              LDR      r1,|L1.1004|
000138  8809              LDRH     r1,[r1,#0]            ;95  ; SaveRState
00013a  f4115f80          TST      r1,#0x1000            ;95
00013e  d001              BEQ      |L1.324|
000140  f4805080          EOR      r0,r0,#0x1000         ;95
                  |L1.324|
000144  49a9              LDR      r1,|L1.1004|
000146  8809              LDRH     r1,[r1,#0]            ;95  ; SaveRState
000148  f4115f00          TST      r1,#0x2000            ;95
00014c  d001              BEQ      |L1.338|
00014e  f4805000          EOR      r0,r0,#0x2000         ;95
                  |L1.338|
000152  49a3              LDR      r1,|L1.992|
000154  3944              SUBS     r1,r1,#0x44           ;95
000156  6008              STR      r0,[r1,#0]            ;95
000158  49a5              LDR      r1,|L1.1008|
00015a  f8d11c00          LDR      r1,[r1,#0xc00]        ;96
00015e  b289              UXTH     r1,r1                 ;96
000160  f64872bf          MOV      r2,#0x8fbf            ;96
000164  ea010002          AND      r0,r1,r2              ;96
000168  49a2              LDR      r1,|L1.1012|
00016a  8809              LDRH     r1,[r1,#0]            ;96  ; SaveTState
00016c  f0110f10          TST      r1,#0x10              ;96
000170  d001              BEQ      |L1.374|
000172  f0800010          EOR      r0,r0,#0x10           ;96
                  |L1.374|
000176  499f              LDR      r1,|L1.1012|
000178  8809              LDRH     r1,[r1,#0]            ;96  ; SaveTState
00017a  f0110f20          TST      r1,#0x20              ;96
00017e  d001              BEQ      |L1.388|
000180  f0800020          EOR      r0,r0,#0x20           ;96
                  |L1.388|
000184  4996              LDR      r1,|L1.992|
000186  3944              SUBS     r1,r1,#0x44           ;96
000188  6008              STR      r0,[r1,#0]            ;96
00018a  e7b6              B        |L1.250|
                  |L1.396|
00018c  f4146f00          TST      r4,#0x800             ;99
000190  d03f              BEQ      |L1.530|
000192  4893              LDR      r0,|L1.992|
000194  3844              SUBS     r0,r0,#0x44           ;101
000196  6800              LDR      r0,[r0,#0]            ;101
000198  f3c0000e          UBFX     r0,r0,#0,#15          ;101
00019c  f648718f          MOV      r1,#0x8f8f            ;101
0001a0  4008              ANDS     r0,r0,r1              ;101
0001a2  4993              LDR      r1,|L1.1008|
0001a4  f8c10c00          STR      r0,[r1,#0xc00]        ;101
0001a8  f7fffffe          BL       Setup0_Process
0001ac  498c              LDR      r1,|L1.992|
0001ae  3944              SUBS     r1,r1,#0x44           ;104
0001b0  6809              LDR      r1,[r1,#0]            ;104
0001b2  b289              UXTH     r1,r1                 ;104
0001b4  f64b728f          MOV      r2,#0xbf8f            ;104
0001b8  ea010002          AND      r0,r1,r2              ;104
0001bc  498b              LDR      r1,|L1.1004|
0001be  8809              LDRH     r1,[r1,#0]            ;104  ; SaveRState
0001c0  f4115f80          TST      r1,#0x1000            ;104
0001c4  d001              BEQ      |L1.458|
0001c6  f4805080          EOR      r0,r0,#0x1000         ;104
                  |L1.458|
0001ca  4988              LDR      r1,|L1.1004|
0001cc  8809              LDRH     r1,[r1,#0]            ;104  ; SaveRState
0001ce  f4115f00          TST      r1,#0x2000            ;104
0001d2  d001              BEQ      |L1.472|
0001d4  f4805000          EOR      r0,r0,#0x2000         ;104
                  |L1.472|
0001d8  4981              LDR      r1,|L1.992|
0001da  3944              SUBS     r1,r1,#0x44           ;104
0001dc  6008              STR      r0,[r1,#0]            ;104
0001de  4984              LDR      r1,|L1.1008|
0001e0  f8d11c00          LDR      r1,[r1,#0xc00]        ;105
0001e4  b289              UXTH     r1,r1                 ;105
0001e6  f64872bf          MOV      r2,#0x8fbf            ;105
0001ea  ea010002          AND      r0,r1,r2              ;105
0001ee  4981              LDR      r1,|L1.1012|
0001f0  8809              LDRH     r1,[r1,#0]            ;105  ; SaveTState
0001f2  f0110f10          TST      r1,#0x10              ;105
0001f6  d001              BEQ      |L1.508|
0001f8  f0800010          EOR      r0,r0,#0x10           ;105
                  |L1.508|
0001fc  497d              LDR      r1,|L1.1012|
0001fe  8809              LDRH     r1,[r1,#0]            ;105  ; SaveTState
000200  f0110f20          TST      r1,#0x20              ;105
000204  d001              BEQ      |L1.522|
000206  f0800020          EOR      r0,r0,#0x20           ;105
                  |L1.522|
00020a  4975              LDR      r1,|L1.992|
00020c  3944              SUBS     r1,r1,#0x44           ;105
00020e  6008              STR      r0,[r1,#0]            ;105
000210  e773              B        |L1.250|
                  |L1.530|
000212  f4144f00          TST      r4,#0x8000            ;109
000216  d07d              BEQ      |L1.788|
000218  4871              LDR      r0,|L1.992|
00021a  3844              SUBS     r0,r0,#0x44           ;111
00021c  6800              LDR      r0,[r0,#0]            ;111
00021e  f3c0000e          UBFX     r0,r0,#0,#15          ;111
000222  f648718f          MOV      r1,#0x8f8f            ;111
000226  4008              ANDS     r0,r0,r1              ;111
000228  4971              LDR      r1,|L1.1008|
00022a  f8c10c00          STR      r0,[r1,#0xc00]        ;111
00022e  f7fffffe          BL       Out0_Process
000232  496b              LDR      r1,|L1.992|
000234  3944              SUBS     r1,r1,#0x44           ;114
000236  6809              LDR      r1,[r1,#0]            ;114
000238  b289              UXTH     r1,r1                 ;114
00023a  f64b728f          MOV      r2,#0xbf8f            ;114
00023e  ea010002          AND      r0,r1,r2              ;114
000242  496a              LDR      r1,|L1.1004|
000244  8809              LDRH     r1,[r1,#0]            ;114  ; SaveRState
000246  f4115f80          TST      r1,#0x1000            ;114
00024a  d001              BEQ      |L1.592|
00024c  f4805080          EOR      r0,r0,#0x1000         ;114
                  |L1.592|
000250  4966              LDR      r1,|L1.1004|
000252  8809              LDRH     r1,[r1,#0]            ;114  ; SaveRState
000254  f4115f00          TST      r1,#0x2000            ;114
000258  d001              BEQ      |L1.606|
00025a  f4805000          EOR      r0,r0,#0x2000         ;114
                  |L1.606|
00025e  4960              LDR      r1,|L1.992|
000260  3944              SUBS     r1,r1,#0x44           ;114
000262  6008              STR      r0,[r1,#0]            ;114
000264  4962              LDR      r1,|L1.1008|
000266  f8d11c00          LDR      r1,[r1,#0xc00]        ;115
00026a  b289              UXTH     r1,r1                 ;115
00026c  f64872bf          MOV      r2,#0x8fbf            ;115
000270  ea010002          AND      r0,r1,r2              ;115
000274  495f              LDR      r1,|L1.1012|
000276  8809              LDRH     r1,[r1,#0]            ;115  ; SaveTState
000278  f0110f10          TST      r1,#0x10              ;115
00027c  d001              BEQ      |L1.642|
00027e  f0800010          EOR      r0,r0,#0x10           ;115
                  |L1.642|
000282  495c              LDR      r1,|L1.1012|
000284  8809              LDRH     r1,[r1,#0]            ;115  ; SaveTState
000286  f0110f20          TST      r1,#0x20              ;115
00028a  d001              BEQ      |L1.656|
00028c  f0800020          EOR      r0,r0,#0x20           ;115
                  |L1.656|
000290  4953              LDR      r1,|L1.992|
000292  3944              SUBS     r1,r1,#0x44           ;115
000294  6008              STR      r0,[r1,#0]            ;115
000296  e730              B        |L1.250|
                  |L1.664|
000298  4853              LDR      r0,|L1.1000|
00029a  7800              LDRB     r0,[r0,#0]            ;125  ; EPindex
00029c  4954              LDR      r1,|L1.1008|
00029e  eb010080          ADD      r0,r1,r0,LSL #2       ;125
0002a2  f8d00c00          LDR      r0,[r0,#0xc00]        ;125
0002a6  b284              UXTH     r4,r0                 ;125
0002a8  f4144f00          TST      r4,#0x8000            ;126
0002ac  d018              BEQ      |L1.736|
0002ae  484e              LDR      r0,|L1.1000|
0002b0  7800              LDRB     r0,[r0,#0]            ;129  ; EPindex
0002b2  eb010080          ADD      r0,r1,r0,LSL #2       ;129
0002b6  f8d00c00          LDR      r0,[r0,#0xc00]        ;129
0002ba  f3c0000e          UBFX     r0,r0,#0,#15          ;129
0002be  f648718f          MOV      r1,#0x8f8f            ;129
0002c2  4008              ANDS     r0,r0,r1              ;129
0002c4  4948              LDR      r1,|L1.1000|
0002c6  7809              LDRB     r1,[r1,#0]            ;129  ; EPindex
0002c8  4a49              LDR      r2,|L1.1008|
0002ca  eb020181          ADD      r1,r2,r1,LSL #2       ;129
0002ce  f8c10c00          STR      r0,[r1,#0xc00]        ;129
0002d2  4945              LDR      r1,|L1.1000|
0002d4  7809              LDRB     r1,[r1,#0]            ;132  ; EPindex
0002d6  1e49              SUBS     r1,r1,#1              ;132
0002d8  4a47              LDR      r2,|L1.1016|
0002da  f8520021          LDR      r0,[r2,r1,LSL #2]     ;132
0002de  4780              BLX      r0                    ;132
                  |L1.736|
0002e0  f0140f80          TST      r4,#0x80              ;136
0002e4  d01a              BEQ      |L1.796|
0002e6  4840              LDR      r0,|L1.1000|
0002e8  7800              LDRB     r0,[r0,#0]            ;139  ; EPindex
0002ea  4941              LDR      r1,|L1.1008|
0002ec  eb010080          ADD      r0,r1,r0,LSL #2       ;139
0002f0  f8d00c00          LDR      r0,[r0,#0xc00]        ;139
0002f4  b280              UXTH     r0,r0                 ;139
0002f6  f648710f          MOV      r1,#0x8f0f            ;139
0002fa  4008              ANDS     r0,r0,r1              ;139
0002fc  493a              LDR      r1,|L1.1000|
0002fe  7809              LDRB     r1,[r1,#0]            ;139  ; EPindex
000300  4a3b              LDR      r2,|L1.1008|
000302  eb020181          ADD      r1,r2,r1,LSL #2       ;139
000306  f8c10c00          STR      r0,[r1,#0xc00]        ;139
00030a  4937              LDR      r1,|L1.1000|
00030c  7809              LDRB     r1,[r1,#0]            ;142  ; EPindex
00030e  1e49              SUBS     r1,r1,#1              ;142
000310  4a3a              LDR      r2,|L1.1020|
000312  e000              B        |L1.790|
                  |L1.788|
000314  e002              B        |L1.796|
                  |L1.790|
000316  f8520021          LDR      r0,[r2,r1,LSL #2]     ;142
00031a  4780              BLX      r0                    ;142
                  |L1.796|
00031c  4830              LDR      r0,|L1.992|
00031e  6800              LDR      r0,[r0,#0]            ;45
000320  b280              UXTH     r0,r0                 ;45
000322  4930              LDR      r1,|L1.996|
000324  8008              STRH     r0,[r1,#0]            ;45
000326  f4104f00          TST      r0,#0x8000            ;45
00032a  f47fae6c          BNE      |L1.6|
00032e  e6e4              B        |L1.250|
;;;149    
                          ENDP

                  CTR_HP PROC
;;;157    *******************************************************************************/
;;;158    void CTR_HP(void)
000330  b510              PUSH     {r4,lr}
;;;159    {
;;;160      u32 wEPVal = 0;
000332  2400              MOVS     r4,#0
;;;161    
;;;162      while (((wIstr = _GetISTR()) & ISTR_CTR) != 0)
000334  e04a              B        |L1.972|
                  |L1.822|
;;;163      {
;;;164        _SetISTR((u16)CLR_CTR); /* clear CTR flag */
000336  f64770ff          MOV      r0,#0x7fff
00033a  4929              LDR      r1,|L1.992|
00033c  6008              STR      r0,[r1,#0]
;;;165        /* extract highest priority endpoint number */
;;;166        EPindex = (u8)(wIstr & ISTR_EP_ID);
00033e  4829              LDR      r0,|L1.996|
000340  8800              LDRH     r0,[r0,#0]  ; wIstr
000342  f000000f          AND      r0,r0,#0xf
000346  4928              LDR      r1,|L1.1000|
000348  7008              STRB     r0,[r1,#0]
;;;167        /* process related endpoint register */
;;;168        wEPVal = _GetENDPOINT(EPindex);
00034a  4608              MOV      r0,r1
00034c  7800              LDRB     r0,[r0,#0]  ; EPindex
00034e  4928              LDR      r1,|L1.1008|
000350  eb010080          ADD      r0,r1,r0,LSL #2
000354  f8d00c00          LDR      r0,[r0,#0xc00]
000358  b284              UXTH     r4,r0
;;;169        if ((wEPVal & EP_CTR_RX) != 0)
00035a  f4144f00          TST      r4,#0x8000
00035e  d019              BEQ      |L1.916|
;;;170        {
;;;171          /* clear int flag */
;;;172          _ClearEP_CTR_RX(EPindex);
000360  4821              LDR      r0,|L1.1000|
000362  7800              LDRB     r0,[r0,#0]  ; EPindex
000364  eb010080          ADD      r0,r1,r0,LSL #2
000368  f8d00c00          LDR      r0,[r0,#0xc00]
00036c  f3c0000e          UBFX     r0,r0,#0,#15
000370  f648718f          MOV      r1,#0x8f8f
000374  4008              ANDS     r0,r0,r1
000376  491c              LDR      r1,|L1.1000|
000378  7809              LDRB     r1,[r1,#0]  ; EPindex
00037a  4a1d              LDR      r2,|L1.1008|
00037c  eb020181          ADD      r1,r2,r1,LSL #2
000380  f8c10c00          STR      r0,[r1,#0xc00]
;;;173    
;;;174          /* call OUT service function */
;;;175          (*pEpInt_OUT[EPindex-1])();
000384  4918              LDR      r1,|L1.1000|
000386  7809              LDRB     r1,[r1,#0]  ; EPindex
000388  1e49              SUBS     r1,r1,#1
00038a  4a1b              LDR      r2,|L1.1016|
00038c  f8520021          LDR      r0,[r2,r1,LSL #2]
000390  4780              BLX      r0
000392  e01b              B        |L1.972|
                  |L1.916|
;;;176    
;;;177        } /* if((wEPVal & EP_CTR_RX) */
;;;178        else if ((wEPVal & EP_CTR_TX) != 0)
000394  f0140f80          TST      r4,#0x80
000398  d018              BEQ      |L1.972|
;;;179        {
;;;180          /* clear int flag */
;;;181          _ClearEP_CTR_TX(EPindex);
00039a  4813              LDR      r0,|L1.1000|
00039c  7800              LDRB     r0,[r0,#0]  ; EPindex
00039e  4914              LDR      r1,|L1.1008|
0003a0  eb010080          ADD      r0,r1,r0,LSL #2
0003a4  f8d00c00          LDR      r0,[r0,#0xc00]
0003a8  b280              UXTH     r0,r0
0003aa  f648710f          MOV      r1,#0x8f0f
0003ae  4008              ANDS     r0,r0,r1
0003b0  490d              LDR      r1,|L1.1000|
0003b2  7809              LDRB     r1,[r1,#0]  ; EPindex
0003b4  4a0e              LDR      r2,|L1.1008|
0003b6  eb020181          ADD      r1,r2,r1,LSL #2
0003ba  f8c10c00          STR      r0,[r1,#0xc00]
;;;182    
;;;183          /* call IN service function */
;;;184          (*pEpInt_IN[EPindex-1])();
0003be  490a              LDR      r1,|L1.1000|
0003c0  7809              LDRB     r1,[r1,#0]  ; EPindex
0003c2  1e49              SUBS     r1,r1,#1
0003c4  4a0d              LDR      r2,|L1.1020|
0003c6  f8520021          LDR      r0,[r2,r1,LSL #2]
0003ca  4780              BLX      r0
                  |L1.972|
0003cc  4804              LDR      r0,|L1.992|
0003ce  6800              LDR      r0,[r0,#0]            ;162
0003d0  b280              UXTH     r0,r0                 ;162
0003d2  4904              LDR      r1,|L1.996|
0003d4  8008              STRH     r0,[r1,#0]            ;162
0003d6  f4104f00          TST      r0,#0x8000            ;162
0003da  d1ac              BNE      |L1.822|
;;;185    
;;;186    
;;;187        } /* if((wEPVal & EP_CTR_TX) != 0) */
;;;188    
;;;189      }/* while(...) */
;;;190    }
0003dc  bd10              POP      {r4,pc}
;;;191    
                          ENDP

0003de  0000              DCW      0x0000
                  |L1.992|
                          DCD      0x40005c44
                  |L1.996|
                          DCD      wIstr
                  |L1.1000|
                          DCD      EPindex
                  |L1.1004|
                          DCD      SaveRState
                  |L1.1008|
                          DCD      0x40005000
                  |L1.1012|
                          DCD      SaveTState
                  |L1.1016|
                          DCD      pEpInt_OUT
                  |L1.1020|
                          DCD      pEpInt_IN

                          AREA ||.data||, DATA, ALIGN=1

                  SaveRState
000000  0000              DCB      0x00,0x00
                  SaveTState
000002  0000              DCB      0x00,0x00
