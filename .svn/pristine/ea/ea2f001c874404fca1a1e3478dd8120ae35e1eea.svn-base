; generated by ARM C/C++ Compiler with , RVCT4.0 [Build 524] for uVision
; commandline ArmCC [--debug -c --asm --interleave -o..\OBJ\usb_regs.o --depend=..\OBJ\usb_regs.d --device=DARMSTM --apcs=interwork -O0 -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\USMART -I..\HARDWARE\LED -I..\HARDWARE\BEEP -I..\HARDWARE\KEY -I..\HARDWARE\EXTI -I..\HARDWARE\WDG -I..\HARDWARE\TIMER -I..\HARDWARE\TPAD -I..\HARDWARE\OLED -I..\HARDWARE\LCD -I..\HARDWARE\RTC -I..\HARDWARE\WKUP -I..\HARDWARE\ADC -I..\HARDWARE\DAC -I..\HARDWARE\DMA -I..\HARDWARE\24CXX -I..\HARDWARE\SPI -I..\HARDWARE\FLASH -I..\USER -I..\USB\LIB -I..\USB\CONFIG -IC:\Keil\ARM\INC\ST\STM32F10x --omf_browse=..\OBJ\usb_regs.crf ..\USB\LIB\usb_regs.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  SetCNTR PROC
;;;33     *******************************************************************************/
;;;34     void SetCNTR(u16 wRegValue)
000000  49f9              LDR      r1,|L1.1000|
;;;35     {
;;;36       _SetCNTR(wRegValue);
000002  6008              STR      r0,[r1,#0]
;;;37     }
000004  4770              BX       lr
;;;38     
                          ENDP

                  GetCNTR PROC
;;;45     *******************************************************************************/
;;;46     u16 GetCNTR(void)
000006  48f8              LDR      r0,|L1.1000|
;;;47     {
;;;48       return(_GetCNTR());
000008  6800              LDR      r0,[r0,#0]
00000a  b280              UXTH     r0,r0
;;;49     }
00000c  4770              BX       lr
;;;50     
                          ENDP

                  SetISTR PROC
;;;57     *******************************************************************************/
;;;58     void SetISTR(u16 wRegValue)
00000e  49f6              LDR      r1,|L1.1000|
;;;59     {
;;;60       _SetISTR(wRegValue);
000010  1d09              ADDS     r1,r1,#4
000012  6008              STR      r0,[r1,#0]
;;;61     }
000014  4770              BX       lr
;;;62     
                          ENDP

                  GetISTR PROC
;;;69     *******************************************************************************/
;;;70     u16 GetISTR(void)
000016  48f4              LDR      r0,|L1.1000|
;;;71     {
;;;72       return(_GetISTR());
000018  1d00              ADDS     r0,r0,#4
00001a  6800              LDR      r0,[r0,#0]
00001c  b280              UXTH     r0,r0
;;;73     }
00001e  4770              BX       lr
;;;74     
                          ENDP

                  GetFNR PROC
;;;81     *******************************************************************************/
;;;82     u16 GetFNR(void)
000020  48f1              LDR      r0,|L1.1000|
;;;83     {
;;;84       return(_GetFNR());
000022  3008              ADDS     r0,r0,#8
000024  6800              LDR      r0,[r0,#0]
000026  b280              UXTH     r0,r0
;;;85     }
000028  4770              BX       lr
;;;86     
                          ENDP

                  SetDADDR PROC
;;;93     *******************************************************************************/
;;;94     void SetDADDR(u16 wRegValue)
00002a  49ef              LDR      r1,|L1.1000|
;;;95     {
;;;96       _SetDADDR(wRegValue);
00002c  310c              ADDS     r1,r1,#0xc
00002e  6008              STR      r0,[r1,#0]
;;;97     }
000030  4770              BX       lr
;;;98     
                          ENDP

                  GetDADDR PROC
;;;105    *******************************************************************************/
;;;106    u16 GetDADDR(void)
000032  48ed              LDR      r0,|L1.1000|
;;;107    {
;;;108      return(_GetDADDR());
000034  300c              ADDS     r0,r0,#0xc
000036  6800              LDR      r0,[r0,#0]
000038  b280              UXTH     r0,r0
;;;109    }
00003a  4770              BX       lr
;;;110    
                          ENDP

                  SetBTABLE PROC
;;;117    *******************************************************************************/
;;;118    void SetBTABLE(u16 wRegValue)
00003c  f64f71f8          MOV      r1,#0xfff8
;;;119    {
;;;120      _SetBTABLE(wRegValue);
000040  4001              ANDS     r1,r1,r0
000042  4ae9              LDR      r2,|L1.1000|
000044  3210              ADDS     r2,r2,#0x10
000046  6011              STR      r1,[r2,#0]
;;;121    }
000048  4770              BX       lr
;;;122    
                          ENDP

                  GetBTABLE PROC
;;;129    *******************************************************************************/
;;;130    u16 GetBTABLE(void)
00004a  48e7              LDR      r0,|L1.1000|
;;;131    {
;;;132      return(_GetBTABLE());
00004c  3010              ADDS     r0,r0,#0x10
00004e  6800              LDR      r0,[r0,#0]
000050  b280              UXTH     r0,r0
;;;133    }
000052  4770              BX       lr
;;;134    
                          ENDP

                  SetENDPOINT PROC
;;;142    *******************************************************************************/
;;;143    void SetENDPOINT(u8 bEpNum, u16 wRegValue)
000054  4ae5              LDR      r2,|L1.1004|
;;;144    {
;;;145      _SetENDPOINT(bEpNum, wRegValue);
000056  eb020280          ADD      r2,r2,r0,LSL #2
00005a  f8c21c00          STR      r1,[r2,#0xc00]
;;;146    }
00005e  4770              BX       lr
;;;147    
                          ENDP

                  GetENDPOINT PROC
;;;154    *******************************************************************************/
;;;155    u16 GetENDPOINT(u8 bEpNum)
000060  4601              MOV      r1,r0
;;;156    {
;;;157      return(_GetENDPOINT(bEpNum));
000062  48e2              LDR      r0,|L1.1004|
000064  eb000081          ADD      r0,r0,r1,LSL #2
000068  f8d00c00          LDR      r0,[r0,#0xc00]
00006c  b280              UXTH     r0,r0
;;;158    }
00006e  4770              BX       lr
;;;159    
                          ENDP

                  SetEPType PROC
;;;167    *******************************************************************************/
;;;168    void SetEPType(u8 bEpNum, u16 wType)
000070  4ade              LDR      r2,|L1.1004|
;;;169    {
;;;170      _SetEPType(bEpNum, wType);
000072  eb020280          ADD      r2,r2,r0,LSL #2
000076  f8d22c00          LDR      r2,[r2,#0xc00]
00007a  b292              UXTH     r2,r2
00007c  f648138f          MOV      r3,#0x898f
000080  401a              ANDS     r2,r2,r3
000082  430a              ORRS     r2,r2,r1
000084  4bd9              LDR      r3,|L1.1004|
000086  eb030380          ADD      r3,r3,r0,LSL #2
00008a  f8c32c00          STR      r2,[r3,#0xc00]
;;;171    }
00008e  4770              BX       lr
;;;172    
                          ENDP

                  GetEPType PROC
;;;179    *******************************************************************************/
;;;180    u16 GetEPType(u8 bEpNum)
000090  4601              MOV      r1,r0
;;;181    {
;;;182      return(_GetEPType(bEpNum));
000092  48d6              LDR      r0,|L1.1004|
000094  eb000081          ADD      r0,r0,r1,LSL #2
000098  f8d00c00          LDR      r0,[r0,#0xc00]
00009c  f40060c0          AND      r0,r0,#0x600
;;;183    }
0000a0  4770              BX       lr
;;;184    
                          ENDP

                  SetEPTxStatus PROC
;;;192    *******************************************************************************/
;;;193    void SetEPTxStatus(u8 bEpNum, u16 wState)
0000a2  b510              PUSH     {r4,lr}
;;;194    {
;;;195      _SetEPTxStatus(bEpNum, wState);
0000a4  4bd1              LDR      r3,|L1.1004|
0000a6  eb030380          ADD      r3,r3,r0,LSL #2
0000aa  f8d33c00          LDR      r3,[r3,#0xc00]
0000ae  b29b              UXTH     r3,r3
0000b0  f64874bf          MOV      r4,#0x8fbf
0000b4  ea030204          AND      r2,r3,r4
0000b8  f0110f10          TST      r1,#0x10
0000bc  d001              BEQ      |L1.194|
0000be  f0820210          EOR      r2,r2,#0x10
                  |L1.194|
0000c2  f0110f20          TST      r1,#0x20
0000c6  d001              BEQ      |L1.204|
0000c8  f0820220          EOR      r2,r2,#0x20
                  |L1.204|
0000cc  4bc7              LDR      r3,|L1.1004|
0000ce  eb030380          ADD      r3,r3,r0,LSL #2
0000d2  f8c32c00          STR      r2,[r3,#0xc00]
;;;196    }
0000d6  bd10              POP      {r4,pc}
;;;197    
                          ENDP

                  SetEPRxStatus PROC
;;;205    *******************************************************************************/
;;;206    void SetEPRxStatus(u8 bEpNum, u16 wState)
0000d8  b510              PUSH     {r4,lr}
;;;207    {
;;;208      _SetEPRxStatus(bEpNum, wState);
0000da  4bc4              LDR      r3,|L1.1004|
0000dc  eb030380          ADD      r3,r3,r0,LSL #2
0000e0  f8d33c00          LDR      r3,[r3,#0xc00]
0000e4  b29b              UXTH     r3,r3
0000e6  f64b748f          MOV      r4,#0xbf8f
0000ea  ea030204          AND      r2,r3,r4
0000ee  f4115f80          TST      r1,#0x1000
0000f2  d001              BEQ      |L1.248|
0000f4  f4825280          EOR      r2,r2,#0x1000
                  |L1.248|
0000f8  f4115f00          TST      r1,#0x2000
0000fc  d001              BEQ      |L1.258|
0000fe  f4825200          EOR      r2,r2,#0x2000
                  |L1.258|
000102  4bba              LDR      r3,|L1.1004|
000104  eb030380          ADD      r3,r3,r0,LSL #2
000108  f8c32c00          STR      r2,[r3,#0xc00]
;;;209    }
00010c  bd10              POP      {r4,pc}
;;;210    
                          ENDP

                  SetDouBleBuffEPStall PROC
;;;218    *******************************************************************************/
;;;219    void SetDouBleBuffEPStall(u8 bEpNum, u8 bDir)
00010e  b510              PUSH     {r4,lr}
;;;220    {
000110  4602              MOV      r2,r0
000112  460b              MOV      r3,r1
;;;221      u16 Endpoint_DTOG_Status;
;;;222      Endpoint_DTOG_Status = GetENDPOINT(bEpNum);
000114  4610              MOV      r0,r2
000116  f7fffffe          BL       GetENDPOINT
00011a  4604              MOV      r4,r0
;;;223      if (bDir == EP_DBUF_OUT)
00011c  2b01              CMP      r3,#1
00011e  d107              BNE      |L1.304|
;;;224      { /* OUT double buffered endpoint */
;;;225        _SetENDPOINT(bEpNum, Endpoint_DTOG_Status & ~EPRX_DTOG1);
000120  f4245080          BIC      r0,r4,#0x1000
000124  49b1              LDR      r1,|L1.1004|
000126  eb010182          ADD      r1,r1,r2,LSL #2
00012a  f8c10c00          STR      r0,[r1,#0xc00]
00012e  e008              B        |L1.322|
                  |L1.304|
;;;226      }
;;;227      else if (bDir == EP_DBUF_IN)
000130  2b02              CMP      r3,#2
000132  d106              BNE      |L1.322|
;;;228      { /* IN double buffered endpoint */
;;;229        _SetENDPOINT(bEpNum, Endpoint_DTOG_Status & ~EPTX_DTOG1);
000134  f0240010          BIC      r0,r4,#0x10
000138  49ac              LDR      r1,|L1.1004|
00013a  eb010182          ADD      r1,r1,r2,LSL #2
00013e  f8c10c00          STR      r0,[r1,#0xc00]
                  |L1.322|
;;;230      }
;;;231    }
000142  bd10              POP      {r4,pc}
;;;232    
                          ENDP

                  GetEPTxStatus PROC
;;;239    *******************************************************************************/
;;;240    u16 GetEPTxStatus(u8 bEpNum)
000144  4601              MOV      r1,r0
;;;241    {
;;;242      return(_GetEPTxStatus(bEpNum));
000146  48a9              LDR      r0,|L1.1004|
000148  eb000081          ADD      r0,r0,r1,LSL #2
00014c  f8d00c00          LDR      r0,[r0,#0xc00]
000150  f0000030          AND      r0,r0,#0x30
;;;243    }
000154  4770              BX       lr
;;;244    
                          ENDP

                  GetEPRxStatus PROC
;;;251    *******************************************************************************/
;;;252    u16 GetEPRxStatus(u8 bEpNum)
000156  4601              MOV      r1,r0
;;;253    {
;;;254      return(_GetEPRxStatus(bEpNum));
000158  48a4              LDR      r0,|L1.1004|
00015a  eb000081          ADD      r0,r0,r1,LSL #2
00015e  f8d00c00          LDR      r0,[r0,#0xc00]
000162  f4005040          AND      r0,r0,#0x3000
;;;255    }
000166  4770              BX       lr
;;;256    
                          ENDP

                  SetEPTxValid PROC
;;;263    *******************************************************************************/
;;;264    void SetEPTxValid(u8 bEpNum)
000168  4aa0              LDR      r2,|L1.1004|
;;;265    {
;;;266      _SetEPTxStatus(bEpNum, EP_TX_VALID);
00016a  eb020280          ADD      r2,r2,r0,LSL #2
00016e  f8d22c00          LDR      r2,[r2,#0xc00]
000172  b292              UXTH     r2,r2
000174  f64873bf          MOV      r3,#0x8fbf
000178  ea020103          AND      r1,r2,r3
00017c  f0810110          EOR      r1,r1,#0x10
000180  f0810120          EOR      r1,r1,#0x20
000184  4a99              LDR      r2,|L1.1004|
000186  eb020280          ADD      r2,r2,r0,LSL #2
00018a  f8c21c00          STR      r1,[r2,#0xc00]
;;;267    }
00018e  4770              BX       lr
;;;268    
                          ENDP

                  SetEPRxValid PROC
;;;275    *******************************************************************************/
;;;276    void SetEPRxValid(u8 bEpNum)
000190  4a96              LDR      r2,|L1.1004|
;;;277    {
;;;278      _SetEPRxStatus(bEpNum, EP_RX_VALID);
000192  eb020280          ADD      r2,r2,r0,LSL #2
000196  f8d22c00          LDR      r2,[r2,#0xc00]
00019a  b292              UXTH     r2,r2
00019c  f64b738f          MOV      r3,#0xbf8f
0001a0  ea020103          AND      r1,r2,r3
0001a4  f4815180          EOR      r1,r1,#0x1000
0001a8  f4815100          EOR      r1,r1,#0x2000
0001ac  4a8f              LDR      r2,|L1.1004|
0001ae  eb020280          ADD      r2,r2,r0,LSL #2
0001b2  f8c21c00          STR      r1,[r2,#0xc00]
;;;279    }
0001b6  4770              BX       lr
;;;280    
                          ENDP

                  SetEP_KIND PROC
;;;287    *******************************************************************************/
;;;288    void SetEP_KIND(u8 bEpNum)
0001b8  498c              LDR      r1,|L1.1004|
;;;289    {
;;;290      _SetEP_KIND(bEpNum);
0001ba  eb010180          ADD      r1,r1,r0,LSL #2
0001be  f8d11c00          LDR      r1,[r1,#0xc00]
0001c2  b289              UXTH     r1,r1
0001c4  f4417180          ORR      r1,r1,#0x100
0001c8  f648728f          MOV      r2,#0x8f8f
0001cc  4011              ANDS     r1,r1,r2
0001ce  4a87              LDR      r2,|L1.1004|
0001d0  eb020280          ADD      r2,r2,r0,LSL #2
0001d4  f8c21c00          STR      r1,[r2,#0xc00]
;;;291    }
0001d8  4770              BX       lr
;;;292    
                          ENDP

                  ClearEP_KIND PROC
;;;299    *******************************************************************************/
;;;300    void ClearEP_KIND(u8 bEpNum)
0001da  4984              LDR      r1,|L1.1004|
;;;301    {
;;;302      _ClearEP_KIND(bEpNum);
0001dc  eb010180          ADD      r1,r1,r0,LSL #2
0001e0  f8d11c00          LDR      r1,[r1,#0xc00]
0001e4  b289              UXTH     r1,r1
0001e6  f648628f          MOV      r2,#0x8e8f
0001ea  4011              ANDS     r1,r1,r2
0001ec  4a7f              LDR      r2,|L1.1004|
0001ee  eb020280          ADD      r2,r2,r0,LSL #2
0001f2  f8c21c00          STR      r1,[r2,#0xc00]
;;;303    }
0001f6  4770              BX       lr
;;;304    /*******************************************************************************
                          ENDP

                  Clear_Status_Out PROC
;;;310    *******************************************************************************/
;;;311    void Clear_Status_Out(u8 bEpNum)
0001f8  497c              LDR      r1,|L1.1004|
;;;312    {
;;;313      _ClearEP_KIND(bEpNum);
0001fa  eb010180          ADD      r1,r1,r0,LSL #2
0001fe  f8d11c00          LDR      r1,[r1,#0xc00]
000202  b289              UXTH     r1,r1
000204  f648628f          MOV      r2,#0x8e8f
000208  4011              ANDS     r1,r1,r2
00020a  4a78              LDR      r2,|L1.1004|
00020c  eb020280          ADD      r2,r2,r0,LSL #2
000210  f8c21c00          STR      r1,[r2,#0xc00]
;;;314    }
000214  4770              BX       lr
;;;315    /*******************************************************************************
                          ENDP

                  Set_Status_Out PROC
;;;321    *******************************************************************************/
;;;322    void Set_Status_Out(u8 bEpNum)
000216  4975              LDR      r1,|L1.1004|
;;;323    {
;;;324      _SetEP_KIND(bEpNum);
000218  eb010180          ADD      r1,r1,r0,LSL #2
00021c  f8d11c00          LDR      r1,[r1,#0xc00]
000220  b289              UXTH     r1,r1
000222  f4417180          ORR      r1,r1,#0x100
000226  f648728f          MOV      r2,#0x8f8f
00022a  4011              ANDS     r1,r1,r2
00022c  4a6f              LDR      r2,|L1.1004|
00022e  eb020280          ADD      r2,r2,r0,LSL #2
000232  f8c21c00          STR      r1,[r2,#0xc00]
;;;325    }
000236  4770              BX       lr
;;;326    /*******************************************************************************
                          ENDP

                  SetEPDoubleBuff PROC
;;;332    *******************************************************************************/
;;;333    void SetEPDoubleBuff(u8 bEpNum)
000238  496c              LDR      r1,|L1.1004|
;;;334    {
;;;335      _SetEP_KIND(bEpNum);
00023a  eb010180          ADD      r1,r1,r0,LSL #2
00023e  f8d11c00          LDR      r1,[r1,#0xc00]
000242  b289              UXTH     r1,r1
000244  f4417180          ORR      r1,r1,#0x100
000248  f648728f          MOV      r2,#0x8f8f
00024c  4011              ANDS     r1,r1,r2
00024e  4a67              LDR      r2,|L1.1004|
000250  eb020280          ADD      r2,r2,r0,LSL #2
000254  f8c21c00          STR      r1,[r2,#0xc00]
;;;336    }
000258  4770              BX       lr
;;;337    /*******************************************************************************
                          ENDP

                  ClearEPDoubleBuff PROC
;;;343    *******************************************************************************/
;;;344    void ClearEPDoubleBuff(u8 bEpNum)
00025a  4964              LDR      r1,|L1.1004|
;;;345    {
;;;346      _ClearEP_KIND(bEpNum);
00025c  eb010180          ADD      r1,r1,r0,LSL #2
000260  f8d11c00          LDR      r1,[r1,#0xc00]
000264  b289              UXTH     r1,r1
000266  f648628f          MOV      r2,#0x8e8f
00026a  4011              ANDS     r1,r1,r2
00026c  4a5f              LDR      r2,|L1.1004|
00026e  eb020280          ADD      r2,r2,r0,LSL #2
000272  f8c21c00          STR      r1,[r2,#0xc00]
;;;347    }
000276  4770              BX       lr
;;;348    /*******************************************************************************
                          ENDP

                  GetTxStallStatus PROC
;;;354    *******************************************************************************/
;;;355    u16 GetTxStallStatus(u8 bEpNum)
000278  4601              MOV      r1,r0
;;;356    {
;;;357      return(_GetTxStallStatus(bEpNum));
00027a  485c              LDR      r0,|L1.1004|
00027c  eb000081          ADD      r0,r0,r1,LSL #2
000280  f8d00c00          LDR      r0,[r0,#0xc00]
000284  f0000030          AND      r0,r0,#0x30
000288  2810              CMP      r0,#0x10
00028a  d101              BNE      |L1.656|
00028c  2001              MOVS     r0,#1
00028e  e000              B        |L1.658|
                  |L1.656|
000290  2000              MOVS     r0,#0
                  |L1.658|
000292  b280              UXTH     r0,r0
;;;358    }
000294  4770              BX       lr
;;;359    /*******************************************************************************
                          ENDP

                  GetRxStallStatus PROC
;;;365    *******************************************************************************/
;;;366    u16 GetRxStallStatus(u8 bEpNum)
000296  4601              MOV      r1,r0
;;;367    {
;;;368      return(_GetRxStallStatus(bEpNum));
000298  4854              LDR      r0,|L1.1004|
00029a  eb000081          ADD      r0,r0,r1,LSL #2
00029e  f8d00c00          LDR      r0,[r0,#0xc00]
0002a2  f4005040          AND      r0,r0,#0x3000
0002a6  f5b05f80          CMP      r0,#0x1000
0002aa  d101              BNE      |L1.688|
0002ac  2001              MOVS     r0,#1
0002ae  e000              B        |L1.690|
                  |L1.688|
0002b0  2000              MOVS     r0,#0
                  |L1.690|
0002b2  b280              UXTH     r0,r0
;;;369    }
0002b4  4770              BX       lr
;;;370    /*******************************************************************************
                          ENDP

                  ClearEP_CTR_RX PROC
;;;376    *******************************************************************************/
;;;377    void ClearEP_CTR_RX(u8 bEpNum)
0002b6  494d              LDR      r1,|L1.1004|
;;;378    {
;;;379      _ClearEP_CTR_RX(bEpNum);
0002b8  eb010180          ADD      r1,r1,r0,LSL #2
0002bc  f8d11c00          LDR      r1,[r1,#0xc00]
0002c0  f3c1010e          UBFX     r1,r1,#0,#15
0002c4  f648728f          MOV      r2,#0x8f8f
0002c8  4011              ANDS     r1,r1,r2
0002ca  4a48              LDR      r2,|L1.1004|
0002cc  eb020280          ADD      r2,r2,r0,LSL #2
0002d0  f8c21c00          STR      r1,[r2,#0xc00]
;;;380    }
0002d4  4770              BX       lr
;;;381    /*******************************************************************************
                          ENDP

                  ClearEP_CTR_TX PROC
;;;387    *******************************************************************************/
;;;388    void ClearEP_CTR_TX(u8 bEpNum)
0002d6  4945              LDR      r1,|L1.1004|
;;;389    {
;;;390      _ClearEP_CTR_TX(bEpNum);
0002d8  eb010180          ADD      r1,r1,r0,LSL #2
0002dc  f8d11c00          LDR      r1,[r1,#0xc00]
0002e0  b289              UXTH     r1,r1
0002e2  f648720f          MOV      r2,#0x8f0f
0002e6  4011              ANDS     r1,r1,r2
0002e8  4a40              LDR      r2,|L1.1004|
0002ea  eb020280          ADD      r2,r2,r0,LSL #2
0002ee  f8c21c00          STR      r1,[r2,#0xc00]
;;;391    }
0002f2  4770              BX       lr
;;;392    /*******************************************************************************
                          ENDP

                  ToggleDTOG_RX PROC
;;;398    *******************************************************************************/
;;;399    void ToggleDTOG_RX(u8 bEpNum)
0002f4  493d              LDR      r1,|L1.1004|
;;;400    {
;;;401      _ToggleDTOG_RX(bEpNum);
0002f6  eb010180          ADD      r1,r1,r0,LSL #2
0002fa  f8d11c00          LDR      r1,[r1,#0xc00]
0002fe  b289              UXTH     r1,r1
000300  f648728f          MOV      r2,#0x8f8f
000304  4011              ANDS     r1,r1,r2
000306  f4414180          ORR      r1,r1,#0x4000
00030a  4a38              LDR      r2,|L1.1004|
00030c  eb020280          ADD      r2,r2,r0,LSL #2
000310  f8c21c00          STR      r1,[r2,#0xc00]
;;;402    }
000314  4770              BX       lr
;;;403    /*******************************************************************************
                          ENDP

                  ToggleDTOG_TX PROC
;;;409    *******************************************************************************/
;;;410    void ToggleDTOG_TX(u8 bEpNum)
000316  4935              LDR      r1,|L1.1004|
;;;411    {
;;;412      _ToggleDTOG_TX(bEpNum);
000318  eb010180          ADD      r1,r1,r0,LSL #2
00031c  f8d11c00          LDR      r1,[r1,#0xc00]
000320  b289              UXTH     r1,r1
000322  f648728f          MOV      r2,#0x8f8f
000326  4011              ANDS     r1,r1,r2
000328  f0410140          ORR      r1,r1,#0x40
00032c  4a2f              LDR      r2,|L1.1004|
00032e  eb020280          ADD      r2,r2,r0,LSL #2
000332  f8c21c00          STR      r1,[r2,#0xc00]
;;;413    }
000336  4770              BX       lr
;;;414    /*******************************************************************************
                          ENDP

                  ClearDTOG_RX PROC
;;;420    *******************************************************************************/
;;;421    void ClearDTOG_RX(u8 bEpNum)
000338  492c              LDR      r1,|L1.1004|
;;;422    {
;;;423      _ClearDTOG_RX(bEpNum);
00033a  eb010180          ADD      r1,r1,r0,LSL #2
00033e  f8d11c00          LDR      r1,[r1,#0xc00]
000342  f4114f80          TST      r1,#0x4000
000346  d00f              BEQ      |L1.872|
000348  4928              LDR      r1,|L1.1004|
00034a  eb010180          ADD      r1,r1,r0,LSL #2
00034e  f8d11c00          LDR      r1,[r1,#0xc00]
000352  b289              UXTH     r1,r1
000354  f648728f          MOV      r2,#0x8f8f
000358  4011              ANDS     r1,r1,r2
00035a  f4414180          ORR      r1,r1,#0x4000
00035e  4a23              LDR      r2,|L1.1004|
000360  eb020280          ADD      r2,r2,r0,LSL #2
000364  f8c21c00          STR      r1,[r2,#0xc00]
                  |L1.872|
;;;424    }
000368  4770              BX       lr
;;;425    /*******************************************************************************
                          ENDP

                  ClearDTOG_TX PROC
;;;431    *******************************************************************************/
;;;432    void ClearDTOG_TX(u8 bEpNum)
00036a  4920              LDR      r1,|L1.1004|
;;;433    {
;;;434      _ClearDTOG_TX(bEpNum);
00036c  eb010180          ADD      r1,r1,r0,LSL #2
000370  f8d11c00          LDR      r1,[r1,#0xc00]
000374  f0110f40          TST      r1,#0x40
000378  d00f              BEQ      |L1.922|
00037a  491c              LDR      r1,|L1.1004|
00037c  eb010180          ADD      r1,r1,r0,LSL #2
000380  f8d11c00          LDR      r1,[r1,#0xc00]
000384  b289              UXTH     r1,r1
000386  f648728f          MOV      r2,#0x8f8f
00038a  4011              ANDS     r1,r1,r2
00038c  f0410140          ORR      r1,r1,#0x40
000390  4a16              LDR      r2,|L1.1004|
000392  eb020280          ADD      r2,r2,r0,LSL #2
000396  f8c21c00          STR      r1,[r2,#0xc00]
                  |L1.922|
;;;435    }
00039a  4770              BX       lr
;;;436    /*******************************************************************************
                          ENDP

                  SetEPAddress PROC
;;;443    *******************************************************************************/
;;;444    void SetEPAddress(u8 bEpNum, u8 bAddr)
00039c  4a13              LDR      r2,|L1.1004|
;;;445    {
;;;446      _SetEPAddress(bEpNum, bAddr);
00039e  eb020280          ADD      r2,r2,r0,LSL #2
0003a2  f8d22c00          LDR      r2,[r2,#0xc00]
0003a6  b292              UXTH     r2,r2
0003a8  f648738f          MOV      r3,#0x8f8f
0003ac  401a              ANDS     r2,r2,r3
0003ae  430a              ORRS     r2,r2,r1
0003b0  4b0e              LDR      r3,|L1.1004|
0003b2  eb030380          ADD      r3,r3,r0,LSL #2
0003b6  f8c32c00          STR      r2,[r3,#0xc00]
;;;447    }
0003ba  4770              BX       lr
;;;448    /*******************************************************************************
                          ENDP

                  GetEPAddress PROC
;;;454    *******************************************************************************/
;;;455    u8 GetEPAddress(u8 bEpNum)
0003bc  4601              MOV      r1,r0
;;;456    {
;;;457      return(_GetEPAddress(bEpNum));
0003be  480b              LDR      r0,|L1.1004|
0003c0  eb000081          ADD      r0,r0,r1,LSL #2
0003c4  f8d00c00          LDR      r0,[r0,#0xc00]
0003c8  f000000f          AND      r0,r0,#0xf
;;;458    }
0003cc  4770              BX       lr
;;;459    /*******************************************************************************
                          ENDP

                  SetEPTxAddr PROC
;;;466    *******************************************************************************/
;;;467    void SetEPTxAddr(u8 bEpNum, u16 wAddr)
0003ce  b510              PUSH     {r4,lr}
;;;468    {
;;;469      _SetEPTxAddr(bEpNum, wAddr);
0003d0  104a              ASRS     r2,r1,#1
0003d2  0052              LSLS     r2,r2,#1
0003d4  4b04              LDR      r3,|L1.1000|
0003d6  3310              ADDS     r3,r3,#0x10
0003d8  681b              LDR      r3,[r3,#0]
0003da  b29b              UXTH     r3,r3
0003dc  eb0303c0          ADD      r3,r3,r0,LSL #3
0003e0  4c03              LDR      r4,|L1.1008|
0003e2  f8442013          STR      r2,[r4,r3,LSL #1]
;;;470    }
0003e6  bd10              POP      {r4,pc}
                  |L1.1000|
                          DCD      0x40005c40
                  |L1.1004|
                          DCD      0x40005000
                  |L1.1008|
                          DCD      0x40006000
                          ENDP

                  SetEPRxAddr PROC
;;;478    *******************************************************************************/
;;;479    void SetEPRxAddr(u8 bEpNum, u16 wAddr)
0003f4  b510              PUSH     {r4,lr}
;;;480    {
;;;481      _SetEPRxAddr(bEpNum, wAddr);
0003f6  104a              ASRS     r2,r1,#1
0003f8  0053              LSLS     r3,r2,#1
0003fa  4af3              LDR      r2,|L1.1992|
0003fc  6812              LDR      r2,[r2,#0]
0003fe  b292              UXTH     r2,r2
000400  eb0202c0          ADD      r2,r2,r0,LSL #3
000404  1d12              ADDS     r2,r2,#4
000406  4cf1              LDR      r4,|L1.1996|
000408  f8443012          STR      r3,[r4,r2,LSL #1]
;;;482    }
00040c  bd10              POP      {r4,pc}
;;;483    /*******************************************************************************
                          ENDP

                  GetEPTxAddr PROC
;;;489    *******************************************************************************/
;;;490    u16 GetEPTxAddr(u8 bEpNum)
00040e  4601              MOV      r1,r0
;;;491    {
;;;492      return(_GetEPTxAddr(bEpNum));
000410  48ed              LDR      r0,|L1.1992|
000412  6800              LDR      r0,[r0,#0]
000414  b280              UXTH     r0,r0
000416  eb0000c1          ADD      r0,r0,r1,LSL #3
00041a  4aec              LDR      r2,|L1.1996|
00041c  f8520010          LDR      r0,[r2,r0,LSL #1]
000420  b280              UXTH     r0,r0
;;;493    }
000422  4770              BX       lr
;;;494    /*******************************************************************************
                          ENDP

                  GetEPRxAddr PROC
;;;500    *******************************************************************************/
;;;501    u16 GetEPRxAddr(u8 bEpNum)
000424  4601              MOV      r1,r0
;;;502    {
;;;503      return(_GetEPRxAddr(bEpNum));
000426  48e8              LDR      r0,|L1.1992|
000428  6800              LDR      r0,[r0,#0]
00042a  b280              UXTH     r0,r0
00042c  eb0000c1          ADD      r0,r0,r1,LSL #3
000430  1d00              ADDS     r0,r0,#4
000432  4ae6              LDR      r2,|L1.1996|
000434  f8520010          LDR      r0,[r2,r0,LSL #1]
000438  b280              UXTH     r0,r0
;;;504    }
00043a  4770              BX       lr
;;;505    /*******************************************************************************
                          ENDP

                  SetEPTxCount PROC
;;;512    *******************************************************************************/
;;;513    void SetEPTxCount(u8 bEpNum, u16 wCount)
00043c  4ae2              LDR      r2,|L1.1992|
;;;514    {
;;;515      _SetEPTxCount(bEpNum, wCount);
00043e  6812              LDR      r2,[r2,#0]
000440  b292              UXTH     r2,r2
000442  eb0202c0          ADD      r2,r2,r0,LSL #3
000446  1c92              ADDS     r2,r2,#2
000448  4be0              LDR      r3,|L1.1996|
00044a  f8431012          STR      r1,[r3,r2,LSL #1]
;;;516    }
00044e  4770              BX       lr
;;;517    /*******************************************************************************
                          ENDP

                  SetEPCountRxReg PROC
;;;524    *******************************************************************************/
;;;525    void SetEPCountRxReg(u32 *pdwReg, u16 wCount)
000450  293e              CMP      r1,#0x3e
;;;526    {
;;;527      _SetEPCountRxReg(dwReg, wCount);
000452  dd0b              BLE      |L1.1132|
000454  114a              ASRS     r2,r1,#5
000456  f0110f1f          TST      r1,#0x1f
00045a  d101              BNE      |L1.1120|
00045c  1e53              SUBS     r3,r2,#1
00045e  b29a              UXTH     r2,r3
                  |L1.1120|
000460  f44f4300          MOV      r3,#0x8000
000464  ea432382          ORR      r3,r3,r2,LSL #10
000468  6003              STR      r3,[r0,#0]
00046a  e007              B        |L1.1148|
                  |L1.1132|
00046c  104a              ASRS     r2,r1,#1
00046e  f0110f01          TST      r1,#1
000472  d001              BEQ      |L1.1144|
000474  1c53              ADDS     r3,r2,#1
000476  b29a              UXTH     r2,r3
                  |L1.1144|
000478  0293              LSLS     r3,r2,#10
00047a  6003              STR      r3,[r0,#0]
                  |L1.1148|
;;;528    }
00047c  4770              BX       lr
;;;529    /*******************************************************************************
                          ENDP

                  SetEPRxCount PROC
;;;536    *******************************************************************************/
;;;537    void SetEPRxCount(u8 bEpNum, u16 wCount)
00047e  b510              PUSH     {r4,lr}
;;;538    {
;;;539      _SetEPRxCount(bEpNum, wCount);
000480  4ad1              LDR      r2,|L1.1992|
000482  6812              LDR      r2,[r2,#0]
000484  b292              UXTH     r2,r2
000486  eb0202c0          ADD      r2,r2,r0,LSL #3
00048a  1d92              ADDS     r2,r2,#6
00048c  4ccf              LDR      r4,|L1.1996|
00048e  eb040342          ADD      r3,r4,r2,LSL #1
000492  293e              CMP      r1,#0x3e
000494  dd0b              BLE      |L1.1198|
000496  114a              ASRS     r2,r1,#5
000498  f0110f1f          TST      r1,#0x1f
00049c  d101              BNE      |L1.1186|
00049e  1e54              SUBS     r4,r2,#1
0004a0  b2a2              UXTH     r2,r4
                  |L1.1186|
0004a2  f44f4400          MOV      r4,#0x8000
0004a6  ea442482          ORR      r4,r4,r2,LSL #10
0004aa  601c              STR      r4,[r3,#0]
0004ac  e007              B        |L1.1214|
                  |L1.1198|
0004ae  104a              ASRS     r2,r1,#1
0004b0  f0110f01          TST      r1,#1
0004b4  d001              BEQ      |L1.1210|
0004b6  1c54              ADDS     r4,r2,#1
0004b8  b2a2              UXTH     r2,r4
                  |L1.1210|
0004ba  0294              LSLS     r4,r2,#10
0004bc  601c              STR      r4,[r3,#0]
                  |L1.1214|
;;;540    }
0004be  bd10              POP      {r4,pc}
;;;541    /*******************************************************************************
                          ENDP

                  GetEPTxCount PROC
;;;547    *******************************************************************************/
;;;548    u16 GetEPTxCount(u8 bEpNum)
0004c0  4601              MOV      r1,r0
;;;549    {
;;;550      return(_GetEPTxCount(bEpNum));
0004c2  48c1              LDR      r0,|L1.1992|
0004c4  6800              LDR      r0,[r0,#0]
0004c6  b280              UXTH     r0,r0
0004c8  eb0000c1          ADD      r0,r0,r1,LSL #3
0004cc  1c80              ADDS     r0,r0,#2
0004ce  4abf              LDR      r2,|L1.1996|
0004d0  f8520010          LDR      r0,[r2,r0,LSL #1]
0004d4  f3c00009          UBFX     r0,r0,#0,#10
;;;551    }
0004d8  4770              BX       lr
;;;552    /*******************************************************************************
                          ENDP

                  GetEPRxCount PROC
;;;558    *******************************************************************************/
;;;559    u16 GetEPRxCount(u8 bEpNum)
0004da  4601              MOV      r1,r0
;;;560    {
;;;561      return(_GetEPRxCount(bEpNum));
0004dc  48ba              LDR      r0,|L1.1992|
0004de  6800              LDR      r0,[r0,#0]
0004e0  b280              UXTH     r0,r0
0004e2  eb0000c1          ADD      r0,r0,r1,LSL #3
0004e6  1d80              ADDS     r0,r0,#6
0004e8  4ab8              LDR      r2,|L1.1996|
0004ea  f8520010          LDR      r0,[r2,r0,LSL #1]
0004ee  f3c00009          UBFX     r0,r0,#0,#10
;;;562    }
0004f2  4770              BX       lr
;;;563    /*******************************************************************************
                          ENDP

                  SetEPDblBuffAddr PROC
;;;571    *******************************************************************************/
;;;572    void SetEPDblBuffAddr(u8 bEpNum, u16 wBuf0Addr, u16 wBuf1Addr)
0004f4  b530              PUSH     {r4,r5,lr}
;;;573    {
;;;574      _SetEPDblBuffAddr(bEpNum, wBuf0Addr, wBuf1Addr);
0004f6  104b              ASRS     r3,r1,#1
0004f8  005b              LSLS     r3,r3,#1
0004fa  4cb3              LDR      r4,|L1.1992|
0004fc  6824              LDR      r4,[r4,#0]
0004fe  b2a4              UXTH     r4,r4
000500  eb0404c0          ADD      r4,r4,r0,LSL #3
000504  4db1              LDR      r5,|L1.1996|
000506  f8453014          STR      r3,[r5,r4,LSL #1]
00050a  1053              ASRS     r3,r2,#1
00050c  005c              LSLS     r4,r3,#1
00050e  4bb0              LDR      r3,|L1.2000|
000510  f8d33c50          LDR      r3,[r3,#0xc50]
000514  b29b              UXTH     r3,r3
000516  eb0303c0          ADD      r3,r3,r0,LSL #3
00051a  1d1b              ADDS     r3,r3,#4
00051c  f8454013          STR      r4,[r5,r3,LSL #1]
;;;575    }
000520  bd30              POP      {r4,r5,pc}
;;;576    /*******************************************************************************
                          ENDP

                  SetEPDblBuf0Addr PROC
;;;583    *******************************************************************************/
;;;584    void SetEPDblBuf0Addr(u8 bEpNum, u16 wBuf0Addr)
000522  b510              PUSH     {r4,lr}
;;;585    {
;;;586      _SetEPDblBuf0Addr(bEpNum, wBuf0Addr);
000524  104a              ASRS     r2,r1,#1
000526  0052              LSLS     r2,r2,#1
000528  4ba7              LDR      r3,|L1.1992|
00052a  681b              LDR      r3,[r3,#0]
00052c  b29b              UXTH     r3,r3
00052e  eb0303c0          ADD      r3,r3,r0,LSL #3
000532  4ca6              LDR      r4,|L1.1996|
000534  f8442013          STR      r2,[r4,r3,LSL #1]
;;;587    }
000538  bd10              POP      {r4,pc}
;;;588    /*******************************************************************************
                          ENDP

                  SetEPDblBuf1Addr PROC
;;;595    *******************************************************************************/
;;;596    void SetEPDblBuf1Addr(u8 bEpNum, u16 wBuf1Addr)
00053a  b510              PUSH     {r4,lr}
;;;597    {
;;;598      _SetEPDblBuf1Addr(bEpNum, wBuf1Addr);
00053c  104a              ASRS     r2,r1,#1
00053e  0053              LSLS     r3,r2,#1
000540  4aa1              LDR      r2,|L1.1992|
000542  6812              LDR      r2,[r2,#0]
000544  b292              UXTH     r2,r2
000546  eb0202c0          ADD      r2,r2,r0,LSL #3
00054a  1d12              ADDS     r2,r2,#4
00054c  4c9f              LDR      r4,|L1.1996|
00054e  f8443012          STR      r3,[r4,r2,LSL #1]
;;;599    }
000552  bd10              POP      {r4,pc}
;;;600    /*******************************************************************************
                          ENDP

                  GetEPDblBuf0Addr PROC
;;;606    *******************************************************************************/
;;;607    u16 GetEPDblBuf0Addr(u8 bEpNum)
000554  4601              MOV      r1,r0
;;;608    {
;;;609      return(_GetEPDblBuf0Addr(bEpNum));
000556  489c              LDR      r0,|L1.1992|
000558  6800              LDR      r0,[r0,#0]
00055a  b280              UXTH     r0,r0
00055c  eb0000c1          ADD      r0,r0,r1,LSL #3
000560  4a9a              LDR      r2,|L1.1996|
000562  f8520010          LDR      r0,[r2,r0,LSL #1]
000566  b280              UXTH     r0,r0
;;;610    }
000568  4770              BX       lr
;;;611    /*******************************************************************************
                          ENDP

                  GetEPDblBuf1Addr PROC
;;;617    *******************************************************************************/
;;;618    u16 GetEPDblBuf1Addr(u8 bEpNum)
00056a  4601              MOV      r1,r0
;;;619    {
;;;620      return(_GetEPDblBuf1Addr(bEpNum));
00056c  4896              LDR      r0,|L1.1992|
00056e  6800              LDR      r0,[r0,#0]
000570  b280              UXTH     r0,r0
000572  eb0000c1          ADD      r0,r0,r1,LSL #3
000576  1d00              ADDS     r0,r0,#4
000578  4a94              LDR      r2,|L1.1996|
00057a  f8520010          LDR      r0,[r2,r0,LSL #1]
00057e  b280              UXTH     r0,r0
;;;621    }
000580  4770              BX       lr
;;;622    /*******************************************************************************
                          ENDP

                  SetEPDblBuffCount PROC
;;;629    *******************************************************************************/
;;;630    void SetEPDblBuffCount(u8 bEpNum, u8 bDir, u16 wCount)
000582  b530              PUSH     {r4,r5,lr}
;;;631    {
;;;632      _SetEPDblBuffCount(bEpNum, bDir, wCount);
000584  2901              CMP      r1,#1
000586  d11f              BNE      |L1.1480|
000588  4c8f              LDR      r4,|L1.1992|
00058a  6824              LDR      r4,[r4,#0]
00058c  b2a4              UXTH     r4,r4
00058e  eb0404c0          ADD      r4,r4,r0,LSL #3
000592  1ca4              ADDS     r4,r4,#2
000594  4d8d              LDR      r5,|L1.1996|
000596  eb050344          ADD      r3,r5,r4,LSL #1
00059a  2a3e              CMP      r2,#0x3e
00059c  dd0b              BLE      |L1.1462|
00059e  1154              ASRS     r4,r2,#5
0005a0  f0120f1f          TST      r2,#0x1f
0005a4  d101              BNE      |L1.1450|
0005a6  1e65              SUBS     r5,r4,#1
0005a8  b2ac              UXTH     r4,r5
                  |L1.1450|
0005aa  f44f4500          MOV      r5,#0x8000
0005ae  ea452584          ORR      r5,r5,r4,LSL #10
0005b2  601d              STR      r5,[r3,#0]
0005b4  e007              B        |L1.1478|
                  |L1.1462|
0005b6  1054              ASRS     r4,r2,#1
0005b8  f0120f01          TST      r2,#1
0005bc  d001              BEQ      |L1.1474|
0005be  1c65              ADDS     r5,r4,#1
0005c0  b2ac              UXTH     r4,r5
                  |L1.1474|
0005c2  02a5              LSLS     r5,r4,#10
0005c4  601d              STR      r5,[r3,#0]
                  |L1.1478|
0005c6  e00a              B        |L1.1502|
                  |L1.1480|
0005c8  2902              CMP      r1,#2
0005ca  d108              BNE      |L1.1502|
0005cc  4b7e              LDR      r3,|L1.1992|
0005ce  681b              LDR      r3,[r3,#0]
0005d0  b29b              UXTH     r3,r3
0005d2  eb0303c0          ADD      r3,r3,r0,LSL #3
0005d6  1c9b              ADDS     r3,r3,#2
0005d8  4c7c              LDR      r4,|L1.1996|
0005da  f8442013          STR      r2,[r4,r3,LSL #1]
                  |L1.1502|
0005de  2901              CMP      r1,#1
0005e0  d11f              BNE      |L1.1570|
0005e2  4c79              LDR      r4,|L1.1992|
0005e4  6824              LDR      r4,[r4,#0]
0005e6  b2a4              UXTH     r4,r4
0005e8  eb0404c0          ADD      r4,r4,r0,LSL #3
0005ec  1da4              ADDS     r4,r4,#6
0005ee  4d77              LDR      r5,|L1.1996|
0005f0  eb050344          ADD      r3,r5,r4,LSL #1
0005f4  2a3e              CMP      r2,#0x3e
0005f6  dd0b              BLE      |L1.1552|
0005f8  1154              ASRS     r4,r2,#5
0005fa  f0120f1f          TST      r2,#0x1f
0005fe  d101              BNE      |L1.1540|
000600  1e65              SUBS     r5,r4,#1
000602  b2ac              UXTH     r4,r5
                  |L1.1540|
000604  f44f4500          MOV      r5,#0x8000
000608  ea452584          ORR      r5,r5,r4,LSL #10
00060c  601d              STR      r5,[r3,#0]
00060e  e007              B        |L1.1568|
                  |L1.1552|
000610  1054              ASRS     r4,r2,#1
000612  f0120f01          TST      r2,#1
000616  d001              BEQ      |L1.1564|
000618  1c65              ADDS     r5,r4,#1
00061a  b2ac              UXTH     r4,r5
                  |L1.1564|
00061c  02a5              LSLS     r5,r4,#10
00061e  601d              STR      r5,[r3,#0]
                  |L1.1568|
000620  e00a              B        |L1.1592|
                  |L1.1570|
000622  2902              CMP      r1,#2
000624  d108              BNE      |L1.1592|
000626  4b68              LDR      r3,|L1.1992|
000628  681b              LDR      r3,[r3,#0]
00062a  b29b              UXTH     r3,r3
00062c  eb0303c0          ADD      r3,r3,r0,LSL #3
000630  1d9b              ADDS     r3,r3,#6
000632  4c66              LDR      r4,|L1.1996|
000634  f8442013          STR      r2,[r4,r3,LSL #1]
                  |L1.1592|
;;;633    }
000638  bd30              POP      {r4,r5,pc}
;;;634    /*******************************************************************************
                          ENDP

                  SetEPDblBuf0Count PROC
;;;641    *******************************************************************************/
;;;642    void SetEPDblBuf0Count(u8 bEpNum, u8 bDir, u16 wCount)
00063a  b530              PUSH     {r4,r5,lr}
;;;643    {
;;;644      _SetEPDblBuf0Count(bEpNum, bDir, wCount);
00063c  2901              CMP      r1,#1
00063e  d11f              BNE      |L1.1664|
000640  4b61              LDR      r3,|L1.1992|
000642  681b              LDR      r3,[r3,#0]
000644  b29b              UXTH     r3,r3
000646  eb0303c0          ADD      r3,r3,r0,LSL #3
00064a  1c9b              ADDS     r3,r3,#2
00064c  4d5f              LDR      r5,|L1.1996|
00064e  eb050443          ADD      r4,r5,r3,LSL #1
000652  2a3e              CMP      r2,#0x3e
000654  dd0b              BLE      |L1.1646|
000656  1153              ASRS     r3,r2,#5
000658  f0120f1f          TST      r2,#0x1f
00065c  d101              BNE      |L1.1634|
00065e  1e5d              SUBS     r5,r3,#1
000660  b2ab              UXTH     r3,r5
                  |L1.1634|
000662  f44f4500          MOV      r5,#0x8000
000666  ea452583          ORR      r5,r5,r3,LSL #10
00066a  6025              STR      r5,[r4,#0]
00066c  e007              B        |L1.1662|
                  |L1.1646|
00066e  1053              ASRS     r3,r2,#1
000670  f0120f01          TST      r2,#1
000674  d001              BEQ      |L1.1658|
000676  1c5d              ADDS     r5,r3,#1
000678  b2ab              UXTH     r3,r5
                  |L1.1658|
00067a  029d              LSLS     r5,r3,#10
00067c  6025              STR      r5,[r4,#0]
                  |L1.1662|
00067e  e00a              B        |L1.1686|
                  |L1.1664|
000680  2902              CMP      r1,#2
000682  d108              BNE      |L1.1686|
000684  4b50              LDR      r3,|L1.1992|
000686  681b              LDR      r3,[r3,#0]
000688  b29b              UXTH     r3,r3
00068a  eb0303c0          ADD      r3,r3,r0,LSL #3
00068e  1c9b              ADDS     r3,r3,#2
000690  4c4e              LDR      r4,|L1.1996|
000692  f8442013          STR      r2,[r4,r3,LSL #1]
                  |L1.1686|
;;;645    }
000696  bd30              POP      {r4,r5,pc}
;;;646    /*******************************************************************************
                          ENDP

                  SetEPDblBuf1Count PROC
;;;653    *******************************************************************************/
;;;654    void SetEPDblBuf1Count(u8 bEpNum, u8 bDir, u16 wCount)
000698  b530              PUSH     {r4,r5,lr}
;;;655    {
;;;656      _SetEPDblBuf1Count(bEpNum, bDir, wCount);
00069a  2901              CMP      r1,#1
00069c  d11f              BNE      |L1.1758|
00069e  4b4a              LDR      r3,|L1.1992|
0006a0  681b              LDR      r3,[r3,#0]
0006a2  b29b              UXTH     r3,r3
0006a4  eb0303c0          ADD      r3,r3,r0,LSL #3
0006a8  1d9b              ADDS     r3,r3,#6
0006aa  4d48              LDR      r5,|L1.1996|
0006ac  eb050443          ADD      r4,r5,r3,LSL #1
0006b0  2a3e              CMP      r2,#0x3e
0006b2  dd0b              BLE      |L1.1740|
0006b4  1153              ASRS     r3,r2,#5
0006b6  f0120f1f          TST      r2,#0x1f
0006ba  d101              BNE      |L1.1728|
0006bc  1e5d              SUBS     r5,r3,#1
0006be  b2ab              UXTH     r3,r5
                  |L1.1728|
0006c0  f44f4500          MOV      r5,#0x8000
0006c4  ea452583          ORR      r5,r5,r3,LSL #10
0006c8  6025              STR      r5,[r4,#0]
0006ca  e007              B        |L1.1756|
                  |L1.1740|
0006cc  1053              ASRS     r3,r2,#1
0006ce  f0120f01          TST      r2,#1
0006d2  d001              BEQ      |L1.1752|
0006d4  1c5d              ADDS     r5,r3,#1
0006d6  b2ab              UXTH     r3,r5
                  |L1.1752|
0006d8  029d              LSLS     r5,r3,#10
0006da  6025              STR      r5,[r4,#0]
                  |L1.1756|
0006dc  e00a              B        |L1.1780|
                  |L1.1758|
0006de  2902              CMP      r1,#2
0006e0  d108              BNE      |L1.1780|
0006e2  4b39              LDR      r3,|L1.1992|
0006e4  681b              LDR      r3,[r3,#0]
0006e6  b29b              UXTH     r3,r3
0006e8  eb0303c0          ADD      r3,r3,r0,LSL #3
0006ec  1d9b              ADDS     r3,r3,#6
0006ee  4c37              LDR      r4,|L1.1996|
0006f0  f8442013          STR      r2,[r4,r3,LSL #1]
                  |L1.1780|
;;;657    }
0006f4  bd30              POP      {r4,r5,pc}
;;;658    /*******************************************************************************
                          ENDP

                  GetEPDblBuf0Count PROC
;;;665    *******************************************************************************/
;;;666    u16 GetEPDblBuf0Count(u8 bEpNum)
0006f6  4601              MOV      r1,r0
;;;667    {
;;;668      return(_GetEPDblBuf0Count(bEpNum));
0006f8  4833              LDR      r0,|L1.1992|
0006fa  6800              LDR      r0,[r0,#0]
0006fc  b280              UXTH     r0,r0
0006fe  eb0000c1          ADD      r0,r0,r1,LSL #3
000702  1c80              ADDS     r0,r0,#2
000704  4a31              LDR      r2,|L1.1996|
000706  f8520010          LDR      r0,[r2,r0,LSL #1]
00070a  f3c00009          UBFX     r0,r0,#0,#10
;;;669    }
00070e  4770              BX       lr
;;;670    /*******************************************************************************
                          ENDP

                  GetEPDblBuf1Count PROC
;;;677    *******************************************************************************/
;;;678    u16 GetEPDblBuf1Count(u8 bEpNum)
000710  4601              MOV      r1,r0
;;;679    {
;;;680      return(_GetEPDblBuf1Count(bEpNum));
000712  482d              LDR      r0,|L1.1992|
000714  6800              LDR      r0,[r0,#0]
000716  b280              UXTH     r0,r0
000718  eb0000c1          ADD      r0,r0,r1,LSL #3
00071c  1d80              ADDS     r0,r0,#6
00071e  4a2b              LDR      r2,|L1.1996|
000720  f8520010          LDR      r0,[r2,r0,LSL #1]
000724  f3c00009          UBFX     r0,r0,#0,#10
;;;681    }
000728  4770              BX       lr
;;;682    /*******************************************************************************
                          ENDP

                  GetEPDblBufDir PROC
;;;689    *******************************************************************************/
;;;690    EP_DBUF_DIR GetEPDblBufDir(u8 bEpNum)
00072a  4601              MOV      r1,r0
;;;691    {
;;;692      if ((u16)(*_pEPRxCount(bEpNum) & 0xFC00) != 0)
00072c  4826              LDR      r0,|L1.1992|
00072e  6800              LDR      r0,[r0,#0]
000730  b280              UXTH     r0,r0
000732  eb0000c1          ADD      r0,r0,r1,LSL #3
000736  1d80              ADDS     r0,r0,#6
000738  4a24              LDR      r2,|L1.1996|
00073a  f8520010          LDR      r0,[r2,r0,LSL #1]
00073e  f4104f7c          TST      r0,#0xfc00
000742  d001              BEQ      |L1.1864|
;;;693        return(EP_DBUF_OUT);
000744  2001              MOVS     r0,#1
                  |L1.1862|
;;;694      else if (((u16)(*_pEPTxCount(bEpNum)) & 0x03FF) != 0)
;;;695        return(EP_DBUF_IN);
;;;696      else
;;;697        return(EP_DBUF_ERR);
;;;698    }
000746  4770              BX       lr
                  |L1.1864|
000748  481f              LDR      r0,|L1.1992|
00074a  6800              LDR      r0,[r0,#0]            ;694
00074c  b280              UXTH     r0,r0                 ;694
00074e  eb0000c1          ADD      r0,r0,r1,LSL #3       ;694
000752  1c80              ADDS     r0,r0,#2              ;694
000754  4a1d              LDR      r2,|L1.1996|
000756  f8520010          LDR      r0,[r2,r0,LSL #1]     ;694
00075a  0580              LSLS     r0,r0,#22             ;694
00075c  0d80              LSRS     r0,r0,#22             ;694
00075e  d001              BEQ      |L1.1892|
000760  2002              MOVS     r0,#2                 ;695
000762  e7f0              B        |L1.1862|
                  |L1.1892|
000764  2000              MOVS     r0,#0                 ;697
000766  e7ee              B        |L1.1862|
;;;699    /*******************************************************************************
                          ENDP

                  FreeUserBuffer PROC
;;;706    *******************************************************************************/
;;;707    void FreeUserBuffer(u8 bEpNum, u8 bDir)
000768  2901              CMP      r1,#1
;;;708    {
;;;709      if (bDir == EP_DBUF_OUT)
00076a  d110              BNE      |L1.1934|
;;;710      { /* OUT double buffered endpoint */
;;;711        _ToggleDTOG_TX(bEpNum);
00076c  4a18              LDR      r2,|L1.2000|
00076e  eb020280          ADD      r2,r2,r0,LSL #2
000772  f8d22c00          LDR      r2,[r2,#0xc00]
000776  b292              UXTH     r2,r2
000778  f648738f          MOV      r3,#0x8f8f
00077c  401a              ANDS     r2,r2,r3
00077e  f0420240          ORR      r2,r2,#0x40
000782  4b13              LDR      r3,|L1.2000|
000784  eb030380          ADD      r3,r3,r0,LSL #2
000788  f8c32c00          STR      r2,[r3,#0xc00]
00078c  e011              B        |L1.1970|
                  |L1.1934|
;;;712      }
;;;713      else if (bDir == EP_DBUF_IN)
00078e  2902              CMP      r1,#2
000790  d10f              BNE      |L1.1970|
;;;714      { /* IN double buffered endpoint */
;;;715        _ToggleDTOG_RX(bEpNum);
000792  4a0f              LDR      r2,|L1.2000|
000794  eb020280          ADD      r2,r2,r0,LSL #2
000798  f8d22c00          LDR      r2,[r2,#0xc00]
00079c  b292              UXTH     r2,r2
00079e  f648738f          MOV      r3,#0x8f8f
0007a2  401a              ANDS     r2,r2,r3
0007a4  f4424280          ORR      r2,r2,#0x4000
0007a8  4b09              LDR      r3,|L1.2000|
0007aa  eb030380          ADD      r3,r3,r0,LSL #2
0007ae  f8c32c00          STR      r2,[r3,#0xc00]
                  |L1.1970|
;;;716      }
;;;717    }
0007b2  4770              BX       lr
;;;718    
                          ENDP

                  ToWord PROC
;;;725    *******************************************************************************/
;;;726    u16 ToWord(u8 bh, u8 bl)
0007b4  4602              MOV      r2,r0
;;;727    {
;;;728      u16 wRet;
;;;729      wRet = (u16)bl | ((u16)bh << 8);
0007b6  ea412002          ORR      r0,r1,r2,LSL #8
;;;730      return(wRet);
;;;731    }
0007ba  4770              BX       lr
;;;732    /*******************************************************************************
                          ENDP

                  ByteSwap PROC
;;;738    *******************************************************************************/
;;;739    u16 ByteSwap(u16 wSwW)
0007bc  4601              MOV      r1,r0
;;;740    {
;;;741      u8 bTemp;
;;;742      u16 wRet;
;;;743      bTemp = (u8)(wSwW & 0xff);
0007be  b2ca              UXTB     r2,r1
;;;744      wRet =  (wSwW >> 8) | ((u16)bTemp << 8);
0007c0  120b              ASRS     r3,r1,#8
0007c2  ea432002          ORR      r0,r3,r2,LSL #8
;;;745      return(wRet);
;;;746    }
0007c6  4770              BX       lr
;;;747    
                          ENDP

                  |L1.1992|
                          DCD      0x40005c50
                  |L1.1996|
                          DCD      0x40006000
                  |L1.2000|
                          DCD      0x40005000
