; generated by ARM C/C++ Compiler with , RVCT4.0 [Build 524] for uVision
; commandline ArmCC [--debug -c --asm --interleave -o..\OBJ\usb_endp.o --depend=..\OBJ\usb_endp.d --device=DARMSTM --apcs=interwork -O0 -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\USMART -I..\HARDWARE\LED -I..\HARDWARE\BEEP -I..\HARDWARE\KEY -I..\HARDWARE\EXTI -I..\HARDWARE\WDG -I..\HARDWARE\TIMER -I..\HARDWARE\TPAD -I..\HARDWARE\OLED -I..\HARDWARE\LCD -I..\HARDWARE\RTC -I..\HARDWARE\WKUP -I..\HARDWARE\ADC -I..\HARDWARE\DAC -I..\HARDWARE\DMA -I..\HARDWARE\24CXX -I..\HARDWARE\SPI -I..\HARDWARE\FLASH -I..\USER -I..\USB\LIB -I..\USB\CONFIG -IC:\Keil\ARM\INC\ST\STM32F10x --omf_browse=..\OBJ\usb_endp.crf ..\USB\CONFIG\usb_endp.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  EP1_OUT_Callback PROC
;;;36     *******************************************************************************/
;;;37     void EP1_OUT_Callback(void)
000000  b570              PUSH     {r4-r6,lr}
;;;38     {
;;;39     	u16 i,j;
;;;40         //USB_ReceiveFlg = TRUE;
;;;41     	i=_GetEPRxCount(ENDP1);
000002  4823              LDR      r0,|L1.144|
000004  6800              LDR      r0,[r0,#0]
000006  b280              UXTH     r0,r0
000008  300e              ADDS     r0,r0,#0xe
00000a  4922              LDR      r1,|L1.148|
00000c  f8510010          LDR      r0,[r1,r0,LSL #1]
000010  f3c00509          UBFX     r5,r0,#0,#10
;;;42     	i &= 0x1ff;
000014  f3c50508          UBFX     r5,r5,#0,#9
;;;43     	PMAToUserBufferCopy(Receive_Buffer, ENDP1_RXADDR,i);
000018  462a              MOV      r2,r5
00001a  2198              MOVS     r1,#0x98
00001c  481e              LDR      r0,|L1.152|
00001e  f7fffffe          BL       PMAToUserBufferCopy
;;;44     
;;;45     	USB_ReceiveFlg = FALSE;
000022  2000              MOVS     r0,#0
000024  491d              LDR      r1,|L1.156|
000026  7008              STRB     r0,[r1,#0]
;;;46     	USB_RxIdx=0;
000028  491d              LDR      r1,|L1.160|
00002a  8008              STRH     r0,[r1,#0]
;;;47     
;;;48     	if(Receive_Buffer[0]==HEADER)
00002c  481a              LDR      r0,|L1.152|
00002e  7800              LDRB     r0,[r0,#0]  ; Receive_Buffer
000030  28aa              CMP      r0,#0xaa
000032  d121              BNE      |L1.120|
;;;49     	{
;;;50     //		if((RxBuffer[i-1]==TAIL) && (RxBuffer[i-2]==TAIL))
;;;51     		{
;;;52     			//////only for yaya USB in case 22byte
;;;53     			 for(j=0;j<i;j++)
000034  2400              MOVS     r4,#0
000036  e00b              B        |L1.80|
                  |L1.56|
;;;54     			 {
;;;55     			 	if((Receive_Buffer[j]==TAIL) && (Receive_Buffer[j+1]==TAIL))
000038  4817              LDR      r0,|L1.152|
00003a  5d00              LDRB     r0,[r0,r4]
00003c  2817              CMP      r0,#0x17
00003e  d105              BNE      |L1.76|
000040  4915              LDR      r1,|L1.152|
000042  1c60              ADDS     r0,r4,#1
000044  5c08              LDRB     r0,[r1,r0]
000046  2817              CMP      r0,#0x17
000048  d100              BNE      |L1.76|
;;;56     					break;
00004a  e003              B        |L1.84|
                  |L1.76|
00004c  1c60              ADDS     r0,r4,#1              ;53
00004e  b284              UXTH     r4,r0                 ;53
                  |L1.80|
000050  42ac              CMP      r4,r5                 ;53
000052  dbf1              BLT      |L1.56|
                  |L1.84|
000054  bf00              NOP      
;;;57     			 }
;;;58     			 for(i=0;i<=(j+1);i++)
000056  2500              MOVS     r5,#0
000058  e005              B        |L1.102|
                  |L1.90|
;;;59     			 	RxBuffer[i]=Receive_Buffer[i];
00005a  480f              LDR      r0,|L1.152|
00005c  5d40              LDRB     r0,[r0,r5]
00005e  4911              LDR      r1,|L1.164|
000060  5548              STRB     r0,[r1,r5]
000062  1c68              ADDS     r0,r5,#1              ;58
000064  b285              UXTH     r5,r0                 ;58
                  |L1.102|
000066  1c60              ADDS     r0,r4,#1              ;58
000068  4285              CMP      r5,r0                 ;58
00006a  ddf6              BLE      |L1.90|
;;;60     			////////////////////
;;;61     			
;;;62     		 	USB_ReceiveFlg=TRUE;
00006c  2001              MOVS     r0,#1
00006e  490b              LDR      r1,|L1.156|
000070  7008              STRB     r0,[r1,#0]
;;;63     			USB_RxIdx=i-1;
000072  1e68              SUBS     r0,r5,#1
000074  490a              LDR      r1,|L1.160|
000076  8008              STRH     r0,[r1,#0]
                  |L1.120|
;;;64     		}	
;;;65     	}
;;;66     
;;;67     	SetEPRxStatus(ENDP1, EP_RX_VALID);
000078  f44f5140          MOV      r1,#0x3000
00007c  2001              MOVS     r0,#1
00007e  f7fffffe          BL       SetEPRxStatus
;;;68     }
000082  bd70              POP      {r4-r6,pc}
;;;69     
                          ENDP

                  EP2_IN_Callback PROC
;;;70     void EP2_IN_Callback(void)
000084  b510              PUSH     {r4,lr}
;;;71     {
;;;72     	#if defined(USB_WAIT_MODE)
;;;73     	EpMsgStk(1);
000086  2001              MOVS     r0,#1
000088  f7fffffe          BL       EpMsgStk
;;;74     	#endif	 
;;;75     }
00008c  bd10              POP      {r4,pc}
;;;76     
                          ENDP

00008e  0000              DCW      0x0000
                  |L1.144|
                          DCD      0x40005c50
                  |L1.148|
                          DCD      0x40006000
                  |L1.152|
                          DCD      Receive_Buffer
                  |L1.156|
                          DCD      USB_ReceiveFlg
                  |L1.160|
                          DCD      USB_RxIdx
                  |L1.164|
                          DCD      RxBuffer

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  Receive_Buffer
                          %        64
                  Transi_Buffer
                          %        64

                          AREA ||.data||, DATA, ALIGN=1

                  USB_ReceiveFlg
000000  0000              DCB      0x00,0x00
                  USB_RxIdx
000002  0000              DCW      0x0000
