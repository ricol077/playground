; generated by ARM C/C++ Compiler with , RVCT4.0 [Build 524] for uVision
; commandline ArmCC [--debug -c --asm --interleave -o..\OBJ\wkup.o --depend=..\OBJ\wkup.d --device=DARMSTM --apcs=interwork -O0 -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\USMART -I..\HARDWARE\LED -I..\HARDWARE\BEEP -I..\HARDWARE\KEY -I..\HARDWARE\EXTI -I..\HARDWARE\WDG -I..\HARDWARE\TIMER -I..\HARDWARE\TPAD -I..\HARDWARE\OLED -I..\HARDWARE\LCD -I..\HARDWARE\RTC -I..\HARDWARE\WKUP -I..\HARDWARE\ADC -I..\HARDWARE\DAC -I..\HARDWARE\DMA -I..\HARDWARE\24CXX -I..\HARDWARE\SPI -I..\HARDWARE\FLASH -I..\USER -I..\USB\LIB -I..\USB\CONFIG -IC:\Keil\ARM\INC\ST\STM32F10x --omf_browse=..\OBJ\wkup.crf ..\HARDWARE\WKUP\wkup.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  Sys_Enter_Standby PROC
;;;18     //系统进入待机模式
;;;19     void Sys_Enter_Standby(void)
000000  b510              PUSH     {r4,lr}
;;;20     {			 
;;;21     	//关闭所有外设(根据实际情况写)
;;;22        	RCC->APB2RSTR|=0X01FC;//复位所有IO口
000002  482b              LDR      r0,|L1.176|
000004  68c0              LDR      r0,[r0,#0xc]
000006  f44070fe          ORR      r0,r0,#0x1fc
00000a  4929              LDR      r1,|L1.176|
00000c  60c8              STR      r0,[r1,#0xc]
;;;23     	Sys_Standby();//进入待机模式
00000e  f7fffffe          BL       Sys_Standby
;;;24     }
000012  bd10              POP      {r4,pc}
;;;25     //检测WKUP脚的信号
                          ENDP

                  Check_WKUP PROC
;;;27     //      0:错误的触发	
;;;28     u8 Check_WKUP(void) 
000014  b570              PUSH     {r4-r6,lr}
;;;29     {
;;;30     	u8 t=0;
000016  2400              MOVS     r4,#0
;;;31     	u8 tx=0;//记录松开的次数
000018  2500              MOVS     r5,#0
;;;32     	LED0=0; //亮灯DS0 
00001a  2000              MOVS     r0,#0
00001c  4925              LDR      r1,|L1.180|
00001e  6008              STR      r0,[r1,#0]
;;;33     	while(1)
000020  e019              B        |L1.86|
                  |L1.34|
;;;34     	{
;;;35     		if(WKUP_KD)//已经按下了
000022  4825              LDR      r0,|L1.184|
000024  6800              LDR      r0,[r0,#0]
000026  b118              CBZ      r0,|L1.48|
;;;36     		{
;;;37     			t++;
000028  1c60              ADDS     r0,r4,#1
00002a  b2c4              UXTB     r4,r0
;;;38     			tx=0;
00002c  2500              MOVS     r5,#0
00002e  e008              B        |L1.66|
                  |L1.48|
;;;39     		}else 
;;;40     		{
;;;41     			tx++; //超过300ms内没有WKUP信号
000030  1c68              ADDS     r0,r5,#1
000032  b2c5              UXTB     r5,r0
;;;42     			if(tx>3)
000034  2d03              CMP      r5,#3
000036  dd04              BLE      |L1.66|
;;;43     			{
;;;44     				LED0=1;
000038  2001              MOVS     r0,#1
00003a  491e              LDR      r1,|L1.180|
00003c  6008              STR      r0,[r1,#0]
;;;45     				return 0;//错误的按键,按下次数不够
00003e  2000              MOVS     r0,#0
                  |L1.64|
;;;46     			}
;;;47     		}
;;;48     		delay_ms(30);
;;;49     		if(t>=100)//按下超过3秒钟
;;;50     		{
;;;51     			LED0=0;	  //点亮DS0 
;;;52     			return 1; //按下3s以上了
;;;53     		}
;;;54     	}
;;;55     }  
000040  bd70              POP      {r4-r6,pc}
                  |L1.66|
000042  201e              MOVS     r0,#0x1e              ;48
000044  f7fffffe          BL       delay_ms
000048  2c64              CMP      r4,#0x64              ;49
00004a  db04              BLT      |L1.86|
00004c  2000              MOVS     r0,#0                 ;51
00004e  4919              LDR      r1,|L1.180|
000050  6008              STR      r0,[r1,#0]            ;51
000052  2001              MOVS     r0,#1                 ;52
000054  e7f4              B        |L1.64|
                  |L1.86|
000056  e7e4              B        |L1.34|
;;;56     //中断,检测到PA0脚的一个上升沿.	  
                          ENDP

                  WKUP_Init PROC
;;;70     //PA0 WKUP唤醒初始化
;;;71     void WKUP_Init(void)
000058  b510              PUSH     {r4,lr}
;;;72     {	  		  
;;;73     	RCC->APB2ENR|=1<<2;     //先使能外设IO PORTA时钟    
00005a  4815              LDR      r0,|L1.176|
00005c  6980              LDR      r0,[r0,#0x18]
00005e  f0400004          ORR      r0,r0,#4
000062  4913              LDR      r1,|L1.176|
000064  6188              STR      r0,[r1,#0x18]
;;;74     	RCC->APB2ENR|=1<<0;     //开启辅助时钟		  
000066  4608              MOV      r0,r1
000068  6980              LDR      r0,[r0,#0x18]
00006a  f0400001          ORR      r0,r0,#1
00006e  6188              STR      r0,[r1,#0x18]
;;;75      	
;;;76     	GPIOA->CRL&=0XFFFFFFF0;//PA0设置成输入	  
000070  4812              LDR      r0,|L1.188|
000072  6800              LDR      r0,[r0,#0]
000074  f020000f          BIC      r0,r0,#0xf
000078  4911              LDR      r1,|L1.192|
00007a  f8c10800          STR      r0,[r1,#0x800]
;;;77     	GPIOA->CRL|=0X00000008;  
00007e  4608              MOV      r0,r1
000080  f8d00800          LDR      r0,[r0,#0x800]
000084  f0400008          ORR      r0,r0,#8
000088  f8c10800          STR      r0,[r1,#0x800]
;;;78     	Ex_NVIC_Config(GPIO_A,0,RTIR);//PA0上升沿触发	   
00008c  2202              MOVS     r2,#2
00008e  2100              MOVS     r1,#0
000090  4608              MOV      r0,r1
000092  f7fffffe          BL       Ex_NVIC_Config
;;;79     		   										   		   
;;;80     	//(检查是否是正常开)机    		 
;;;81         if(Check_WKUP()==0)Sys_Standby();    //不是开机,进入待机模式  
000096  f7fffffe          BL       Check_WKUP
00009a  b908              CBNZ     r0,|L1.160|
00009c  f7fffffe          BL       Sys_Standby
                  |L1.160|
;;;82     	MY_NVIC_Init(2,2,EXTI0_IRQChannel,2);//抢占2，子优先级2，组2
0000a0  2302              MOVS     r3,#2
0000a2  2206              MOVS     r2,#6
0000a4  4619              MOV      r1,r3
0000a6  4618              MOV      r0,r3
0000a8  f7fffffe          BL       MY_NVIC_Init
;;;83     }
0000ac  bd10              POP      {r4,pc}
;;;84     
                          ENDP

0000ae  0000              DCW      0x0000
                  |L1.176|
                          DCD      0x40021000
                  |L1.180|
                          DCD      0x422401a8
                  |L1.184|
                          DCD      0x42210100
                  |L1.188|
                          DCD      0x40010800
                  |L1.192|
                          DCD      0x40010000
