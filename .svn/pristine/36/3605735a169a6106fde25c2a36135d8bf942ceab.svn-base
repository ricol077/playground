; generated by ARM C/C++ Compiler with , RVCT4.0 [Build 524] for uVision
; commandline ArmCC [--debug -c --asm --interleave -o..\OBJ\wdg.o --depend=..\OBJ\wdg.d --device=DARMSTM --apcs=interwork -O0 -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\USMART -I..\HARDWARE\LED -I..\HARDWARE\BEEP -I..\HARDWARE\KEY -I..\HARDWARE\EXTI -I..\HARDWARE\WDG -I..\HARDWARE\TIMER -I..\HARDWARE\TPAD -I..\HARDWARE\OLED -I..\HARDWARE\LCD -I..\HARDWARE\RTC -I..\HARDWARE\WKUP -I..\HARDWARE\ADC -I..\HARDWARE\DAC -I..\HARDWARE\DMA -I..\HARDWARE\24CXX -I..\HARDWARE\SPI -I..\HARDWARE\FLASH -I..\USER -I..\USB\LIB -I..\USB\CONFIG -IC:\Keil\ARM\INC\ST\STM32F10x --omf_browse=..\OBJ\wdg.crf ..\HARDWARE\WDG\wdg.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  IWDG_Init PROC
;;;24     //时间计算(大概):Tout=((4*2^prer)*rlr)/40 (ms).
;;;25     void IWDG_Init(u8 prer,u16 rlr) 
000000  f2455255          MOV      r2,#0x5555
;;;26     {
;;;27     	IWDG->KR=0X5555;//使能对IWDG->PR和IWDG->RLR的写		 										  
000004  4b34              LDR      r3,|L1.216|
000006  601a              STR      r2,[r3,#0]
;;;28       	IWDG->PR=prer;  //设置分频系数   
000008  461a              MOV      r2,r3
00000a  6050              STR      r0,[r2,#4]
;;;29       	IWDG->RLR=rlr;  //从加载寄存器 IWDG->RLR  
00000c  6091              STR      r1,[r2,#8]
;;;30     	IWDG->KR=0XAAAA;//reload											   
00000e  f64a22aa          MOV      r2,#0xaaaa
000012  601a              STR      r2,[r3,#0]
;;;31       	IWDG->KR=0XCCCC;//使能看门狗	
000014  f64c42cc          MOV      r2,#0xcccc
000018  601a              STR      r2,[r3,#0]
;;;32     }
00001a  4770              BX       lr
;;;33     //喂独立看门狗
                          ENDP

                  IWDG_Feed PROC
;;;34     void IWDG_Feed(void)
00001c  f64a20aa          MOV      r0,#0xaaaa
;;;35     {
;;;36     	IWDG->KR=0XAAAA;//reload											   
000020  492d              LDR      r1,|L1.216|
000022  6008              STR      r0,[r1,#0]
;;;37     }
000024  4770              BX       lr
;;;38     //保存WWDG计数器的设置值,默认为最大. 
                          ENDP

                  WWDG_Init PROC
;;;44     //Fwwdg=PCLK1/(4096*2^fprer). 
;;;45     void WWDG_Init(u8 tr,u8 wr,u8 fprer) 
000026  b570              PUSH     {r4-r6,lr}
;;;46     {    
000028  4604              MOV      r4,r0
00002a  460d              MOV      r5,r1
00002c  4616              MOV      r6,r2
;;;47     	RCC->APB1ENR|=1<<11; 	//使能wwdg时钟 
00002e  482b              LDR      r0,|L1.220|
000030  69c0              LDR      r0,[r0,#0x1c]
000032  f4406000          ORR      r0,r0,#0x800
000036  4929              LDR      r1,|L1.220|
000038  61c8              STR      r0,[r1,#0x1c]
;;;48     	WWDG_CNT=tr&WWDG_CNT;   //初始化WWDG_CNT.     
00003a  4929              LDR      r1,|L1.224|
00003c  7809              LDRB     r1,[r1,#0]  ; WWDG_CNT
00003e  ea040001          AND      r0,r4,r1
000042  4927              LDR      r1,|L1.224|
000044  7008              STRB     r0,[r1,#0]
;;;49     	WWDG->CFR|=fprer<<7;    //PCLK1/4096再除2^fprer 
000046  4827              LDR      r0,|L1.228|
000048  6800              LDR      r0,[r0,#0]
00004a  ea4010c6          ORR      r0,r0,r6,LSL #7
00004e  4926              LDR      r1,|L1.232|
000050  f8c10c04          STR      r0,[r1,#0xc04]
;;;50     	WWDG->CFR&=0XFF80;      
000054  4823              LDR      r0,|L1.228|
000056  6800              LDR      r0,[r0,#0]
000058  f64f7180          MOV      r1,#0xff80
00005c  4008              ANDS     r0,r0,r1
00005e  4922              LDR      r1,|L1.232|
000060  f8c10c04          STR      r0,[r1,#0xc04]
;;;51     	WWDG->CFR|=wr;     		//设定窗口值      
000064  4608              MOV      r0,r1
000066  f8d00c04          LDR      r0,[r0,#0xc04]
00006a  4328              ORRS     r0,r0,r5
00006c  f8c10c04          STR      r0,[r1,#0xc04]
;;;52     	WWDG->CR|=WWDG_CNT; 	//设定计数器值 
000070  481c              LDR      r0,|L1.228|
000072  1f00              SUBS     r0,r0,#4
000074  6800              LDR      r0,[r0,#0]
000076  491a              LDR      r1,|L1.224|
000078  7809              LDRB     r1,[r1,#0]  ; WWDG_CNT
00007a  4308              ORRS     r0,r0,r1
00007c  491a              LDR      r1,|L1.232|
00007e  f8c10c00          STR      r0,[r1,#0xc00]
;;;53     	WWDG->CR|=1<<7;  		//开启看门狗      
000082  4608              MOV      r0,r1
000084  f8d00c00          LDR      r0,[r0,#0xc00]
000088  f0400080          ORR      r0,r0,#0x80
00008c  4915              LDR      r1,|L1.228|
00008e  1f09              SUBS     r1,r1,#4
000090  6008              STR      r0,[r1,#0]
;;;54     	MY_NVIC_Init(2,3,WWDG_IRQChannel,2);//抢占2，子优先级3，组2     
000092  2302              MOVS     r3,#2
000094  2200              MOVS     r2,#0
000096  2103              MOVS     r1,#3
000098  4618              MOV      r0,r3
00009a  f7fffffe          BL       MY_NVIC_Init
;;;55     	WWDG->SR=0X00; 			//清除提前唤醒中断标志位 
00009e  2000              MOVS     r0,#0
0000a0  4911              LDR      r1,|L1.232|
0000a2  f8c10c08          STR      r0,[r1,#0xc08]
;;;56     	WWDG->CFR|=1<<9;        //使能提前唤醒中断 
0000a6  4608              MOV      r0,r1
0000a8  f8d00c04          LDR      r0,[r0,#0xc04]
0000ac  f4407000          ORR      r0,r0,#0x200
0000b0  490c              LDR      r1,|L1.228|
0000b2  6008              STR      r0,[r1,#0]
;;;57     } 
0000b4  bd70              POP      {r4-r6,pc}
;;;58     //重设置WWDG计数器的值 
                          ENDP

                  WWDG_Set_Counter PROC
;;;59     void WWDG_Set_Counter(u8 cnt) 
0000b6  f000017f          AND      r1,r0,#0x7f
;;;60     { 
;;;61     	WWDG->CR =(cnt&0x7F);//重设置7位计数器 
0000ba  4a0a              LDR      r2,|L1.228|
0000bc  1f12              SUBS     r2,r2,#4
0000be  6011              STR      r1,[r2,#0]
;;;62     } 
0000c0  4770              BX       lr
;;;63     //窗口看门狗中断服务程序 
                          ENDP

                  WWDG_IRQHandler PROC
;;;64     void WWDG_IRQHandler(void) 
0000c2  b500              PUSH     {lr}
;;;65     {      
;;;66     	WWDG_Set_Counter(WWDG_CNT);//重设窗口看门狗的值!         
0000c4  4806              LDR      r0,|L1.224|
0000c6  7800              LDRB     r0,[r0,#0]  ; WWDG_CNT
0000c8  f7fffffe          BL       WWDG_Set_Counter
;;;67     	WWDG->SR=0X00;//清除提前唤醒中断标志位 
0000cc  2000              MOVS     r0,#0
0000ce  4905              LDR      r1,|L1.228|
0000d0  1d09              ADDS     r1,r1,#4
0000d2  6008              STR      r0,[r1,#0]
;;;68     //	LED1=!LED1; 
;;;69     }
0000d4  bd00              POP      {pc}
;;;70     
                          ENDP

0000d6  0000              DCW      0x0000
                  |L1.216|
                          DCD      0x40003000
                  |L1.220|
                          DCD      0x40021000
                  |L1.224|
                          DCD      WWDG_CNT
                  |L1.228|
                          DCD      0x40002c04
                  |L1.232|
                          DCD      0x40002000

                          AREA ||.data||, DATA, ALIGN=0

                  WWDG_CNT
000000  7f                DCB      0x7f
