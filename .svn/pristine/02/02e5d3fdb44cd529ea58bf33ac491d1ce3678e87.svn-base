; generated by ARM C/C++ Compiler with , RVCT4.0 [Build 524] for uVision
; commandline ArmCC [--debug -c --asm --interleave -o..\OBJ\exti.o --depend=..\OBJ\exti.d --device=DARMSTM --apcs=interwork -O0 -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\USMART -I..\HARDWARE\LED -I..\HARDWARE\BEEP -I..\HARDWARE\KEY -I..\HARDWARE\EXTI -I..\HARDWARE\WDG -I..\HARDWARE\TIMER -I..\HARDWARE\TPAD -I..\HARDWARE\OLED -I..\HARDWARE\LCD -I..\HARDWARE\RTC -I..\HARDWARE\WKUP -I..\HARDWARE\ADC -I..\HARDWARE\DAC -I..\HARDWARE\DMA -I..\HARDWARE\24CXX -I..\HARDWARE\SPI -I..\HARDWARE\FLASH -I..\USER -I..\USB\LIB -I..\USB\CONFIG -IC:\Keil\ARM\INC\ST\STM32F10x --omf_browse=..\OBJ\exti.crf ..\HARDWARE\EXTI\exti.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  EXTI2_IRQHandler PROC
;;;30     //外部中断2服务程序
;;;31     void EXTI2_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;32     {
;;;33     	delay_ms(10);//消抖
000002  200a              MOVS     r0,#0xa
000004  f7fffffe          BL       delay_ms
;;;34     	if(KEY2==0)	 //按键KEY2
000008  481d              LDR      r0,|L1.128|
00000a  6800              LDR      r0,[r0,#0]
00000c  b938              CBNZ     r0,|L1.30|
;;;35     	{
;;;36     		LED0=!LED0;
00000e  481d              LDR      r0,|L1.132|
000010  6800              LDR      r0,[r0,#0]
000012  b908              CBNZ     r0,|L1.24|
000014  2001              MOVS     r0,#1
000016  e000              B        |L1.26|
                  |L1.24|
000018  2000              MOVS     r0,#0
                  |L1.26|
00001a  491a              LDR      r1,|L1.132|
00001c  6008              STR      r0,[r1,#0]
                  |L1.30|
;;;37     	}		 
;;;38     	EXTI->PR=1<<2;  //清除LINE2上的中断标志位  
00001e  2004              MOVS     r0,#4
000020  4919              LDR      r1,|L1.136|
000022  6008              STR      r0,[r1,#0]
;;;39     }
000024  bd10              POP      {r4,pc}
;;;40     //外部中断3服务程序
                          ENDP

                  EXTI3_IRQHandler PROC
;;;41     void EXTI3_IRQHandler(void)
000026  b510              PUSH     {r4,lr}
;;;42     {
;;;43     	delay_ms(10);//消抖
000028  200a              MOVS     r0,#0xa
00002a  f7fffffe          BL       delay_ms
;;;44     	if(KEY1==0)	 //按键KEY1
00002e  4814              LDR      r0,|L1.128|
000030  1d00              ADDS     r0,r0,#4
000032  6800              LDR      r0,[r0,#0]
;;;45     	{				 
;;;46     //		LED1=!LED1;
;;;47     	}		 
;;;48     	EXTI->PR=1<<3;  //清除LINE3上的中断标志位  
000034  2008              MOVS     r0,#8
000036  4915              LDR      r1,|L1.140|
000038  f8c10414          STR      r0,[r1,#0x414]
;;;49     }
00003c  bd10              POP      {r4,pc}
;;;50     //外部中断4服务程序
                          ENDP

                  EXTI4_IRQHandler PROC
;;;51     void EXTI4_IRQHandler(void)
00003e  b510              PUSH     {r4,lr}
;;;52     {
;;;53     	delay_ms(10);//消抖
000040  200a              MOVS     r0,#0xa
000042  f7fffffe          BL       delay_ms
;;;54     	if(KEY0==0)	 //按键KEY0
000046  480e              LDR      r0,|L1.128|
000048  3008              ADDS     r0,r0,#8
00004a  6800              LDR      r0,[r0,#0]
00004c  b938              CBNZ     r0,|L1.94|
;;;55     	{
;;;56     		LED0=!LED0;
00004e  480d              LDR      r0,|L1.132|
000050  6800              LDR      r0,[r0,#0]
000052  b908              CBNZ     r0,|L1.88|
000054  2001              MOVS     r0,#1
000056  e000              B        |L1.90|
                  |L1.88|
000058  2000              MOVS     r0,#0
                  |L1.90|
00005a  490a              LDR      r1,|L1.132|
00005c  6008              STR      r0,[r1,#0]
                  |L1.94|
;;;57     //		LED1=!LED1;
;;;58     	}		 
;;;59     	EXTI->PR=1<<4;  //清除LINE4上的中断标志位  
00005e  2010              MOVS     r0,#0x10
000060  4909              LDR      r1,|L1.136|
000062  6008              STR      r0,[r1,#0]
;;;60     }		   
000064  bd10              POP      {r4,pc}
;;;61     //外部中断初始化程序
                          ENDP

                  EXTIX_Init PROC
;;;62     //初始化PA0/PE2/PE3/PE4为中断输入.
;;;63     void EXTIX_Init(void)
000066  b510              PUSH     {r4,lr}
;;;64     {
;;;65     //	KEY_Init();
;;;66     
;;;67     //	Ex_NVIC_Config(GPIO_G,7,RTIR);v 			//上升沿触发
;;;68     //	Ex_NVIC_Config(GPIO_E,2,FTIR); 			//下降沿触发
;;;69     //	Ex_NVIC_Config(GPIO_E,3,FTIR); 			//下降沿触发
;;;70     // 	Ex_NVIC_Config(GPIO_E,4,FTIR); 			//下降沿触发
;;;71     Ex_NVIC_Config(GPIO_A,0,RTIR);
000068  2202              MOVS     r2,#2
00006a  2100              MOVS     r1,#0
00006c  4608              MOV      r0,r1
00006e  f7fffffe          BL       Ex_NVIC_Config
;;;72     //	MY_NVIC_Init(2,3,EXTI9_5_IRQChannel,2);	//抢占2，子优先级3，组2
;;;73     MY_NVIC_Init(2,3,EXTI0_IRQChannel,2);
000072  2302              MOVS     r3,#2
000074  2206              MOVS     r2,#6
000076  2103              MOVS     r1,#3
000078  4618              MOV      r0,r3
00007a  f7fffffe          BL       MY_NVIC_Init
;;;74     //	MY_NVIC_Init(2,2,EXTI2_IRQChannel,2);	//抢占2，子优先级2，组2	   
;;;75     //	MY_NVIC_Init(2,1,EXTI3_IRQChannel,2);	//抢占2，子优先级1，组2	   
;;;76     //	MY_NVIC_Init(2,0,EXTI4_IRQChannel,2);	//抢占2，子优先级0，组2	   
;;;77     }
00007e  bd10              POP      {r4,pc}
;;;78     
                          ENDP

                  |L1.128|
                          DCD      0x42230108
                  |L1.132|
                          DCD      0x422401a8
                  |L1.136|
                          DCD      0x40010414
                  |L1.140|
                          DCD      0x40010000
